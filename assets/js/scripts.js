/** jquery.cookie.js */
/*!
 * jQuery Cookie Plugin v1.4.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD
    define(['jquery'], factory);
  } else if (typeof exports === 'object') {
    // CommonJS
    factory(require('jquery'));
  } else {
    // Browser globals
    factory(jQuery);
  }
}(function($) {

  var pluses = /\+/g;

  function encode(s) {
    return config.raw ? s : encodeURIComponent(s);
  }

  function decode(s) {
    return config.raw ? s : decodeURIComponent(s);
  }

  function stringifyCookieValue(value) {
    return encode(config.json ? JSON.stringify(value) : String(value));
  }

  function parseCookieValue(s) {
    if (s.indexOf('"') === 0) {
      // This is a quoted cookie as according to RFC2068, unescape...
      s = s.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, '\\');
    }

    try {
      // Replace server-side written pluses with spaces.
      // If we can't decode the cookie, ignore it, it's unusable.
      // If we can't parse the cookie, ignore it, it's unusable.
      s = decodeURIComponent(s.replace(pluses, ' '));
      return config.json ? JSON.parse(s) : s;
    } catch (e) {}
  }

  function read(s, converter) {
    var value = config.raw ? s : parseCookieValue(s);
    return $.isFunction(converter) ? converter(value) : value;
  }

  var config = $.cookie = function(key, value, options) {

    // Write

    if (value !== undefined && !$.isFunction(value)) {
      options = $.extend({}, config.defaults, options);

      if (typeof options.expires === 'number') {
        var days = options.expires,
          t = options.expires = new Date();
        t.setTime(+t + days * 864e+5);
      }

      return (document.cookie = [
        encode(key), '=', stringifyCookieValue(value),
        options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE
        options.path ? '; path=' + options.path : '',
        options.domain ? '; domain=' + options.domain : '',
        options.secure ? '; secure' : ''
      ].join(''));
    }

    // Read

    var result = key ? undefined : {};

    // To prevent the for loop in the first place assign an empty array
    // in case there are no cookies at all. Also prevents odd result when
    // calling $.cookie().
    var cookies = document.cookie ? document.cookie.split('; ') : [];

    for (var i = 0, l = cookies.length; i < l; i++) {
      var parts = cookies[i].split('=');
      var name = decode(parts.shift());
      var cookie = parts.join('=');

      if (key && key === name) {
        // If second argument (value) is a function it's a converter...
        result = read(cookie, value);
        break;
      }

      // Prevent storing a cookie that we couldn't decode.
      if (!key && (cookie = read(cookie)) !== undefined) {
        result[name] = cookie;
      }
    }

    return result;
  };

  config.defaults = {};

  $.removeCookie = function(key, options) {
    if ($.cookie(key) === undefined) {
      return false;
    }

    // Must not alter options, thus extending a fresh object...
    $.cookie(key, '', $.extend({}, options, {
      expires: -1
    }));
    return !$.cookie(key);
  };

}));

/** fancySelect.js */
// Generated by CoffeeScript 1.4.0
(function() {
  var $;

  $ = window.jQuery || window.Zepto || window.$;

  $.fn.fancySelect = function(opts) {
    var isiOS, settings;
    if (opts == null) {
      opts = {};
    }
    settings = $.extend({
      forceiOS: false,
      includeBlank: false,
      optionTemplate: function(optionEl) {
        return optionEl.text();
      },
      triggerTemplate: function(optionEl) {
        return optionEl.text();
      }
    }, opts);
    isiOS = !!navigator.userAgent.match(/iP(hone|od|ad)/i);
    return this.each(function() {
      var copyOptionsToList, disabled, options, sel, trigger, updateTriggerText, wrapper;
      sel = $(this);
      if (sel.hasClass('fancified') || sel[0].tagName !== 'SELECT') {
        return;
      }
      sel.addClass('fancified');
      sel.css({
        width: 1,
        height: 1,
        display: 'block',
        position: 'absolute',
        top: 0,
        left: 0,
        opacity: 0
      });
      sel.wrap('<div class="fancy-select">');
      wrapper = sel.parent();
      if (sel.data('class')) {
        wrapper.addClass(sel.data('class'));
      }
      wrapper.append('<div class="trigger">');
      if (!(isiOS && !settings.forceiOS)) {
        wrapper.append('<ul class="options">');
      }
      trigger = wrapper.find('.trigger');
      options = wrapper.find('.options');
      disabled = sel.prop('disabled');
      if (disabled) {
        wrapper.addClass('disabled');
      }
      updateTriggerText = function() {
        var triggerHtml;
        triggerHtml = settings.triggerTemplate(sel.find(':selected'));
        return trigger.html(triggerHtml);
      };
      sel.on('blur.fs', function() {
        if (trigger.hasClass('open')) {
          return setTimeout(function() {
            return trigger.trigger('close.fs');
          }, 120);
        }
      });
      trigger.on('close.fs', function() {
        trigger.removeClass('open');
        return options.removeClass('open');
      });
      trigger.on('click.fs', function() {
        var offParent, parent;
        if (!disabled) {
          trigger.toggleClass('open');
          if (isiOS && !settings.forceiOS) {
            if (trigger.hasClass('open')) {
              return sel.focus();
            }
          } else {
            if (trigger.hasClass('open')) {
              parent = trigger.parent();
              offParent = parent.offsetParent();
              if ((parent.offset().top + parent.outerHeight() + options.outerHeight() + 20) > $(window).height() + $(window).scrollTop()) {
                options.addClass('overflowing');
              } else {
                options.removeClass('overflowing');
              }
            }
            options.toggleClass('open');
            if (!isiOS) {
              return sel.focus();
            }
          }
        }
      });
      sel.on('enable', function() {
        sel.prop('disabled', false);
        wrapper.removeClass('disabled');
        disabled = false;
        return copyOptionsToList();
      });
      sel.on('disable', function() {
        sel.prop('disabled', true);
        wrapper.addClass('disabled');
        return disabled = true;
      });
      sel.on('change.fs', function(e) {
        if (e.originalEvent && e.originalEvent.isTrusted) {
          return e.stopPropagation();
        } else {
          return updateTriggerText();
        }
      });
      sel.on('keydown', function(e) {
        var hovered, newHovered, w;
        w = e.which;
        hovered = options.find('.hover');
        hovered.removeClass('hover');
        if (!options.hasClass('open')) {
          if (w === 13 || w === 32 || w === 38 || w === 40) {
            e.preventDefault();
            return trigger.trigger('click.fs');
          }
        } else {
          if (w === 38) {
            e.preventDefault();
            if (hovered.length && hovered.index() > 0) {
              hovered.prev().addClass('hover');
            } else {
              options.find('li:last-child').addClass('hover');
            }
          } else if (w === 40) {
            e.preventDefault();
            if (hovered.length && hovered.index() < options.find('li').length - 1) {
              hovered.next().addClass('hover');
            } else {
              options.find('li:first-child').addClass('hover');
            }
          } else if (w === 27) {
            e.preventDefault();
            trigger.trigger('click.fs');
          } else if (w === 13 || w === 32) {
            e.preventDefault();
            hovered.trigger('click.fs');
          } else if (w === 9) {
            if (trigger.hasClass('open')) {
              trigger.trigger('close.fs');
            }
          }
          newHovered = options.find('.hover');
          if (newHovered.length) {
            options.scrollTop(0);
            return options.scrollTop(newHovered.position().top - 12);
          }
        }
      });
      options.on('click.fs', 'li', function(e) {
        var clicked;
        clicked = $(this);
        sel.val(clicked.data('raw-value'));
        if (!isiOS) {
          sel.trigger('blur.fs').trigger('focus.fs');
        }
        options.find('.selected').removeClass('selected');
        clicked.addClass('selected');
        trigger.addClass('selected');
        return sel.val(clicked.data('raw-value')).trigger('change.fs').trigger('blur.fs').trigger('focus.fs');
      });
      options.on('mouseenter.fs', 'li', function() {
        var hovered, nowHovered;
        nowHovered = $(this);
        hovered = options.find('.hover');
        hovered.removeClass('hover');
        return nowHovered.addClass('hover');
      });
      options.on('mouseleave.fs', 'li', function() {
        return options.find('.hover').removeClass('hover');
      });
      copyOptionsToList = function() {
        var selOpts;
        updateTriggerText();
        if (isiOS && !settings.forceiOS) {
          return;
        }
        selOpts = sel.find('option');
        return sel.find('option').each(function(i, opt) {
          var optHtml;
          opt = $(opt);
          if (!opt.prop('disabled') && (opt.val() || settings.includeBlank)) {
            optHtml = settings.optionTemplate(opt);
            if (opt.prop('selected')) {
              return options.append("<li data-raw-value=\"" + (opt.val()) + "\" class=\"selected\">" + optHtml + "</li>");
            } else {
              return options.append("<li data-raw-value=\"" + (opt.val()) + "\">" + optHtml + "</li>");
            }
          }
        });
      };
      sel.on('update.fs', function() {
        wrapper.find('.options').empty();
        return copyOptionsToList();
      });
      return copyOptionsToList();
    });
  };

}).call(this);

/** jquery.boutique.js */
/*
 * Title: Boutique carousel jQuery plugin
 * Author: Berend de Jong, Frique
 * Author URI: http://www.frique.me/
 * Version: 1.5.1 (20121008.1)
 */

;
(function($) {
  $.fn.boutique = function(options) {

    // OPTION DEFAULTS
    var o = $.extend({
      container_width: 'auto', // Total carousel width (value in pixels or "auto" (auto is 100%/fluid width))
      front_img_width: 280, // Width of the frontal image (value in pixels)
      front_img_height: 'auto', // Height of the frontal image (value in pixels / 'auto')
      variable_container_height: true, // If your images have different heights, this will make the container height adapt to the visible frames (true/false)
      frames: 5, // Amount of visible frames (3 or 5)
      starter: 1, // Number of the frame that starts in front (number)
      speed: 600, // Overall animation speed (time in ms)
      front_topmargin: 40, // Vertical align of the front frame (distance from the container top in pixels)
      behind_topmargin: 20, // Vertical align of the behind frames (2nd and 4th) (distance from the container top in pixels)
      back_topmargin: 0, // Vertical align of the furthest back frames (distance from the container top in pixels)
      behind_opacity: 0.4, // Opacity of the furter back items (between or equal to 0-1)
      back_opacity: 0.15, // Opacity of the furthest back items (between or equal to 0-1)
      behind_size: 0.7, // Size of the further back images (between or equal to 0-1)
      back_size: 0.4, // Size of the furthest back images (between or equal to 0-1)
      behind_distance: 'auto', // Option to manually set the horizontal position (distance from the container edge) of the behind frames (number 2 and 4) ('auto' or pixel value)
      autoplay: false, // Autoplay on/off (true/false)
      autoplay_interval: 3000, // Autoplay time between slides (time in ms)
      stop_autoplay_on_click: false, // If autoplay if on, it will switch off when a frame is clicked (true/false)
      freescroll: true, // Whether you can still navigate while animating (true/false)
      hovergrowth: 0.08, // How much the front item will enlarge on mouse-over (between or equal to 0-1)
      easing: 'easeIOBoutique', // Easing type for moving the frames 1 step ('easing type title')
      move_more_easein: 'easeInBoutique', // Easing type for the first part of moving multiple steps ('easing type title')
      move_more_easebetween: 'linear', // Easing type for moving multiple steps but not first and last ('easing type title')
      move_more_easeout: 'easeOutBoutique', // Easing type for the end of moving multiple steps ('easing type title')
      move_more_directly: false, // Will not bring the in-between frames forward when moving more than once (true/false)
      never_move_twice: false, // Prevents moving 2 steps when frame 1 or 5 is clicked (true/false)
      text_front_only: false, // Show the title/description only in the front frame (true/false)
      text_opacity: 0.7, // Opacity of the title/description layer (value between or equal to 0-1)
      keyboard: true, // Enable/disable keyboard functionality (true/false)
      move_on_hover: false, // Navigating with mouse-over instead of clicking (true/false)
      right_to_left: false, // Adds right-to-left language support (text & animation direction) (true/false)
      lightbox_support: false // [Experimental] If true, Boutique will try to make your lightbox link work (see fancybox example) (true/false)
    }, options);

    $.each(this, function() {
      var $window = $(window),
        $container = $(this).addClass('otz_carousel').show(),
        $parent = $container.parent(),
        $lis = $container.children('li');

      // Set constants
      var $newitem1, $newitem2, $newitem3, $newitem4, $newitem5, $item1, $item2, $item3, $item4, $item5,
        autotimer, container_width, container_height, front_img_height, next,
        containerid = $container.attr('id'),
        busy = false,
        hovering = false,
        current = o.starter,
        items = $lis.length,
        ie = false,
        ie6 = false,
        lteie8 = false,
        container_100 = false,
        hoverspeed = (o.speed / 4),
        var_heights = false;
      if (typeof $.browser === 'object' && $.browser.msie) {
        ie = true;
        if ($.browser.version < 9) {
          lteie8 = true;
          if ($.browser.version < 7) {
            ie6 = true;
          }
        }
      }
      if (o.starter > items) {
        o.starter = items;
      }
      if (o.right_to_left) {
        $container.addClass('rtl');
      }
      if (!containerid) {
        containerid = 'no_id';
      }

      // Option synonyms
      if ('behind_opac' in o) {
        o.behind_opacity = o.behind_opac;
      }
      if ('back_opac' in o) {
        o.back_opacity = o.back_opac;
      }
      if ('autointerval' in o) {
        o.autoplay_interval = o.autointerval;
      }
      if ('hoverspeed' in o) {
        hoverspeed = o.hoverspeed;
      }

      // Simulate 3 frames
      if (o.frames === 3 || o.frames === '3') {
        if (o.behind_distance === 'auto') {
          o.behind_distance = 0;
        }
        o.back_opacity = 0;
      }

      // For each list item...
      var $li = [],
        imgheights = [];
      $.each($lis, function(i) {
        i += 1;
        var $this = $(this).addClass('li' + i),
          $a = $this.children('a'),
          $img = $this.find('img'),
          ratio = 0,
          imgwidth = 0,
          imgheight = 0,
          displayheight = 0,
          // Set headers from alt tags
          header = $img.attr('alt'),
          $span = $this.find('span');
        if (o.front_img_height === 'auto') {
          imgwidth = $img.attr('width');
          imgheight = parseInt($img.attr('height'), 10);
          if (!imgwidth) {
            imgwidth = $img.width();
          }
          if (!imgheight) {
            imgheight = $img.height();
          }
          imgheights.push(imgheight);
          // Calculate the display height
          if (imgwidth && (o.front_img_width !== imgwidth)) {
            ratio = o.front_img_width / imgwidth;
            displayheight = Math.floor(ratio * imgheight);
          }
          $this.data('displayheight', displayheight);
        } else {
          $this.data('displayheight', o.front_img_height);
        }
        if (!$span.length) {
          if (!header) {
            $span = $('<span class="dummy" />');
          } else {
            $span = $('<span />');
          }
          if ($a.length) {
            $span.appendTo($a);
          } else {
            $span.appendTo($this);
          }
        } else {
          $span = $this.find('span');
        }
        if (!header) {
          $('<h6 class="dummy" />').prependTo($span);
        } else {
          $('<h6>' + header + '</h6>').prependTo($span);
        }
        // Cache the element:
        $li[i] = $this;
      });

      // Prepare variable image heights
      if (o.front_img_height === 'auto') {
        var_heights = true;
        front_img_height = 0;
      } else {
        front_img_height = o.front_img_height;
      }

      // Line up first 5 items
      if (items === 1) {
        $item1 = $li[1].clone().addClass('frame1').prependTo($container).data('framesource', 1);
        $item2 = $li[1].clone().addClass('frame2').prependTo($container).data('framesource', 1);
      } else if (o.starter === 2) {
        $item2 = $li[1].clone().addClass('frame2').prependTo($container).data('framesource', 1);
        $item1 = $li[items].clone().addClass('frame1').prependTo($container).data('framesource', items);
      } else if (o.starter === 1) {
        $item1 = $li[items - 1].clone().addClass('frame1').prependTo($container).data('framesource', items - 1);
        $item2 = $li[items].clone().addClass('frame2').prependTo($container).data('framesource', items);
      } else {
        $item2 = $li[o.starter - 1].clone().addClass('frame2').prependTo($container).data('framesource', o.starter - 1);
        $item1 = $li[o.starter - 2].clone().addClass('frame1').prependTo($container).data('framesource', o.starter - 2);
      }
      $item3 = $li[o.starter].clone().addClass('frame3').prependTo($container).data('framesource', o.starter);
      if (items === 1) {
        $item4 = $li[1].clone().addClass('frame4').prependTo($container).data('framesource', 1);
        $item5 = $li[1].clone().addClass('frame5').prependTo($container).data('framesource', 1);
      } else if (o.starter === (items - 1)) {
        $item4 = $li[items].clone().addClass('frame4').prependTo($container).data('framesource', items);
        $item5 = $li[1].clone().addClass('frame5').prependTo($container).data('framesource', 1);
      } else if (o.starter === items) {
        $item4 = $li[1].clone().addClass('frame4').prependTo($container).data('framesource', 1);
        $item5 = $li[2].clone().addClass('frame5').prependTo($container).data('framesource', 2);
      } else {
        $item4 = $li[o.starter + 1].clone().addClass('frame4').prependTo($container).data('framesource', o.starter + 1);
        $item5 = $li[o.starter + 2].clone().addClass('frame5').prependTo($container).data('framesource', o.starter + 2);
      }

      // Remove rel attribute
      $item1.add($item2).add($item3).add($item4).add($item5).children('a').removeAttr('rel');

      // Set CSS classes
      var $back = $item1.add($item5).show().css({
          opacity: 0
        }).addClass('back'),
        $behind = $item2.add($item4).show().css({
          opacity: 0
        }).addClass('behind'),
        $front = $item3.show().css({
          opacity: 0
        }).addClass('front');

      // Get container width
      if (o.container_width === 'auto' || o.container_width === '100%') {
        container_100 = true;
        container_width = parseInt($parent.width(), 10);
      } else {
        container_width = o.container_width;
      }

      // Get vertical frame margins
      var front_top = parseInt($front.css('marginTop'), 10),
        behind_top = parseInt($behind.css('marginTop'), 10),
        back_top = parseInt($back.css('marginTop'), 10);
      if (!front_top) {
        front_top = parseInt(o.front_topmargin, 10);
      }
      if (!behind_top) {
        behind_top = parseInt(o.behind_topmargin, 10);
      }
      if (!back_top) {
        back_top = parseInt(o.back_topmargin, 10);
      }

      var li_border = parseInt($lis.css('borderLeftWidth'), 10),
        li_padding = parseInt($lis.css('paddingLeft'), 10),
        front_header = $front.find('h6').css('font-size'),
        front_span = $front.find('span').css('font-size'),
        $front_img = $front.find('img'),
        front_margin = {
          top: parseInt($front_img.css('marginTop'), 10),
          right: parseInt($front_img.css('marginRight'), 10),
          bottom: parseInt($front_img.css('marginBottom'), 10),
          left: parseInt($front_img.css('marginLeft'), 10)
        },
        front_width = Math.round(o.front_img_width + front_margin.left + front_margin.right + (li_padding * 2) + (li_border * 2)),
        front_height = Math.round(front_img_height + front_margin.top + front_margin.bottom + (li_padding * 2) + (li_border * 2)),
        behind_img_width = Math.round(o.front_img_width * o.behind_size),
        behind_img_height = Math.round(front_img_height * o.behind_size),
        behind_header = $behind.find('h6').css('font-size'),
        behind_span = $behind.find('span').css('font-size'),
        $behind_img = $behind.find('img'),
        behind_margin = {
          top: parseInt($behind_img.css('marginTop'), 10),
          right: parseInt($behind_img.css('marginRight'), 10),
          bottom: parseInt($behind_img.css('marginBottom'), 10),
          left: parseInt($behind_img.css('marginLeft'), 10)
        },
        behind_width = Math.round(behind_img_width + behind_margin.left + behind_margin.right + (li_padding * 2) + (li_border * 2)),
        behind_height = Math.round(behind_img_height + behind_margin.top + behind_margin.bottom + (li_padding * 2) + (li_border * 2)),
        back_img_width = Math.round(o.front_img_width * o.back_size),
        back_img_height = Math.round(front_img_height * o.back_size),
        back_header = $back.find('h6').css('font-size'),
        back_span = $back.find('span').css('font-size'),
        $back_img = $back.find('img'),
        back_margin = {
          top: parseInt($back_img.css('marginTop'), 10),
          right: parseInt($back_img.css('marginRight'), 10),
          bottom: parseInt($back_img.css('marginBottom'), 10),
          left: parseInt($back_img.css('marginLeft'), 10)
        },
        back_width = Math.round(back_img_width + back_margin.left + back_margin.right + (li_padding * 2) + (li_border * 2)),
        back_height = Math.round(back_img_height + back_margin.top + back_margin.bottom + (li_padding * 2) + (li_border * 2)),
        item3_pos = Math.round((container_width / 2) - (front_width / 2)),
        item5_pos = (container_width - back_width),
        item2_pos;

      // Variable image heights
      if (var_heights) {
        front_img_height = 'auto';
        behind_img_height = 'auto';
        back_img_height = 'auto';
      }

      // Optional custom behind frame distance
      if (o.behind_distance !== 'auto') {
        item2_pos = parseInt(o.behind_distance, 10);
      } else {
        item2_pos = Math.round((container_width / 4) - (behind_width / 2));
      }
      var item4_pos = (container_width - item2_pos - behind_width);

      // Remove CSS classes & dummy elements
      $back.removeClass('back');
      $behind.removeClass('behind');
      $front.removeClass('front');

      // Deal with the text container <span> padding for future animation
      var front_span_paddingTop = $('span', $lis).css('padding-top'),
        front_span_paddingRight = $('span', $lis).css('padding-right'),
        front_span_paddingBottom = $('span', $lis).css('padding-bottom'),
        front_span_paddingLeft = $('span', $lis).css('padding-left'),
        front_span_animate = {
          opacity: o.text_opacity,
          fontSize: front_span,
          paddingTop: front_span_paddingTop,
          paddingRight: front_span_paddingRight,
          paddingBottom: front_span_paddingBottom,
          paddingLeft: front_span_paddingLeft
        },
        behind_span_animate = {
          opacity: o.text_opacity,
          fontSize: behind_span,
          paddingTop: Math.round(parseInt(front_span_paddingTop, 10) * 0.8),
          paddingRight: Math.round(parseInt(front_span_paddingRight, 10) * 0.8),
          paddingBottom: Math.round(parseInt(front_span_paddingBottom, 10) * 0.8),
          paddingLeft: Math.round(parseInt(front_span_paddingLeft, 10) * 0.8)
        },
        back_span_animate = {
          opacity: o.text_opacity,
          fontSize: back_span,
          paddingTop: Math.round(parseInt(front_span_paddingTop, 10) * 0.6),
          paddingRight: Math.round(parseInt(front_span_paddingRight, 10) * 0.6),
          paddingBottom: Math.round(parseInt(front_span_paddingBottom, 10) * 0.6),
          paddingLeft: Math.round(parseInt(front_span_paddingLeft, 10) * 0.6)
        };
      if (o.text_front_only) {
        behind_span_animate.opacity = 0;
        back_span_animate = $.extend(back_span_animate, behind_span_animate);
      }
      if (ie6) {
        var front_span_margin = (parseInt($front.find('span').css('margin-left'), 10) + parseInt($front.find('span').css('margin-right'), 10)),
          behind_span_margin = (parseInt($behind.find('span').css('margin-left'), 10) + parseInt($behind.find('span').css('margin-right'), 10)),
          back_span_margin = (parseInt($back.find('span').css('margin-left'), 10) + parseInt($back.find('span').css('margin-right'), 10));
        front_span_animate.width = front_width - parseInt(front_span_paddingRight, 10) - parseInt(front_span_paddingLeft, 10) - front_span_margin - (li_border * 2);
        behind_span_animate.width = behind_width - behind_span_animate.paddingRight - behind_span_animate.paddingLeft - behind_span_margin - (li_border * 2);
        back_span_animate.width = back_width - back_span_animate.paddingRight - back_span_animate.paddingLeft - back_span_margin - (li_border * 2);
      }

      // Now safe to remove dummy elements
      $container.find('.dummy').remove();

      // Get total container height
      var framespaces = [],
        resetContainerHeight = function(animate) {
          framespaces = [];
          framespaces.push(Math.floor(parseInt($li[$item1.data('framesource')].data('displayheight'), 10) * o.back_size) + back_height + parseInt(back_top, 10));
          framespaces.push(Math.floor(parseInt($li[$item2.data('framesource')].data('displayheight'), 10) * o.behind_size) + behind_height + parseInt(behind_top, 10));
          framespaces.push(parseInt($li[current].data('displayheight'), 10) + front_height + parseInt(front_top, 10));
          framespaces.push(Math.floor(parseInt($li[$item4.data('framesource')].data('displayheight'), 10) * o.behind_size) + behind_height + parseInt(behind_top, 10));
          framespaces.push(Math.floor(parseInt($li[$item5.data('framesource')].data('displayheight'), 10) * o.back_size) + back_height + parseInt(back_top, 10));
          if (animate) {
            framespaces.sort(function(a, b) {
              return b - a;
            });
            if (container_height !== framespaces[0]) {
              container_height = framespaces[0];
              $container.stop().animate({
                height: container_height
              }, o.speed, o.easing).css({
                overflow: 'visible'
              });
            }
          }
        };
      if (o.variable_container_height && var_heights) {
        resetContainerHeight(false);
      } else if (var_heights) {
        // Find the largest img height
        imgheights.sort(function(a, b) {
          return b - a;
        });
        var tallestimage = parseInt(imgheights[0], 10);
        // If not available, set it to 300
        if (!tallestimage) {
          tallestimage = 300;
        }
        framespaces.push(tallestimage + front_height + parseInt(front_top, 10));
        framespaces.push(tallestimage + behind_height + parseInt(behind_top, 10));
        framespaces.push(tallestimage + back_height + parseInt(back_top, 10));
      } else {
        framespaces.push(front_height + parseInt(front_top, 10));
        framespaces.push(behind_height + parseInt(behind_top, 10));
        framespaces.push(back_height + parseInt(back_top, 10));
      }
      framespaces.sort(function(a, b) {
        return b - a;
      });
      container_height = framespaces[0];

      // Starting positions
      $container
        .height(container_height)
        .width(container_width);
      $item1.css({
          left: 0,
          top: back_top
        }).css({
          opacity: o.back_opacity
        })
        .find('img').css({
          width: back_img_width,
          height: back_img_height,
          marginTop: back_margin.top,
          marginRight: back_margin.right,
          marginBottom: back_margin.bottom,
          marginLeft: back_margin.left,
          opacity: 1
        })
        .siblings('span').css(back_span_animate)
        .children('h6').css({
          fontSize: back_header
        });
      $item2.css({
          left: item2_pos,
          top: behind_top,
          zIndex: 2
        }).css({
          opacity: o.behind_opacity
        })
        .find('img').css({
          width: behind_img_width,
          height: behind_img_height,
          marginTop: behind_margin.top,
          marginRight: behind_margin.right,
          marginBottom: behind_margin.bottom,
          marginLeft: behind_margin.left,
          opacity: 1
        })
        .siblings('span').css(behind_span_animate)
        .children('h6').css({
          fontSize: behind_header
        });
      $item3.css({
          left: item3_pos,
          top: front_top,
          zIndex: 3
        }).css({
          opacity: 1
        })
        .find('a *').css({
          cursor: 'pointer'
        }).end()
        .find('img').css({
          width: o.front_img_width,
          height: front_img_height,
          marginTop: front_margin.top,
          marginRight: front_margin.right,
          marginBottom: front_margin.bottom,
          marginLeft: front_margin.left,
          opacity: 1
        })
        .siblings('span').css(front_span_animate)
        .children('h6').css({
          fontSize: front_header
        });
      $item4.css({
          left: item4_pos,
          top: behind_top,
          zIndex: 2
        }).css({
          opacity: o.behind_opacity
        })
        .find('img').css({
          width: behind_img_width,
          height: behind_img_height,
          marginTop: behind_margin.top,
          marginRight: behind_margin.right,
          marginBottom: behind_margin.bottom,
          marginLeft: behind_margin.left,
          opacity: 1
        })
        .siblings('span').css(behind_span_animate)
        .children('h6').css({
          fontSize: behind_header
        });
      $item5.css({
          left: item5_pos,
          top: back_top
        }).css({
          opacity: o.back_opacity
        })
        .find('img').css({
          width: back_img_width,
          height: back_img_height,
          marginTop: back_margin.top,
          marginRight: back_margin.right,
          marginBottom: back_margin.bottom,
          marginLeft: back_margin.left,
          opacity: 1
        })
        .siblings('span').css(back_span_animate)
        .children('h6').css({
          fontSize: back_header
        });
      if (o.text_front_only) {
        $item1.add($item2).add($item4).add($item5).find('span').hide();
      }
      // Fix ie6 not understanding how to give an 'auto' height
      if (ie6 && var_heights) {
        $item1.find('img').css({
          height: Math.floor(($li[$item1.data('framesource')].data('displayheight')) * o.back_size)
        });
        $item2.find('img').css({
          height: Math.floor(($li[$item2.data('framesource')].data('displayheight')) * o.behind_size)
        });
        $item3.find('img').css({
          height: Math.floor($li[$item3.data('framesource')].data('displayheight'))
        });
        $item4.find('img').css({
          height: Math.floor(($li[$item4.data('framesource')].data('displayheight')) * o.behind_size)
        });
        $item5.find('img').css({
          height: Math.floor(($li[$item5.data('framesource')].data('displayheight')) * o.back_size)
        });
      }

      // Prepare image animations
      var backimganimate = {
        width: back_img_width,
        marginTop: back_margin.top,
        marginRight: back_margin.right,
        marginBottom: back_margin.bottom,
        marginLeft: back_margin.left,
        opacity: 1
      };
      if (!var_heights) {
        backimganimate.height = back_img_height;
      }
      var newbackimganimate = $.extend({}, backimganimate);
      if (var_heights) {
        newbackimganimate.height = 'auto';
      }
      var behindimganimate = {
        width: behind_img_width,
        marginTop: behind_margin.top,
        marginRight: behind_margin.right,
        marginBottom: behind_margin.bottom,
        marginLeft: behind_margin.left,
        opacity: 1
      };
      if (!var_heights) {
        behindimganimate.height = behind_img_height;
      }
      var frontimganimate = {
        width: o.front_img_width,
        marginTop: front_margin.top,
        marginRight: front_margin.right,
        marginBottom: front_margin.bottom,
        marginLeft: front_margin.left,
        opacity: 1
      };
      if (!var_heights) {
        frontimganimate.height = front_img_height;
      }

      // Define easing types
      if (typeof $.easing.easeIOBoutique === 'undefined' || !$.easing.easeIOBoutique) {
        $.extend($.easing, {
          easeInBoutique: function(t, millisecondsSince, startValue, endValue, totalDuration) {
            var rest = millisecondsSince / totalDuration;
            return rest * rest;
          },
          easeOutBoutique: function(t, millisecondsSince, startValue, endValue, totalDuration) {
            var rest = millisecondsSince / totalDuration;
            return -1 * rest * (rest - 2);
          },
          easeIOBoutique: function(t, millisecondsSince, startValue, endValue, totalDuration) {
            var rest = (millisecondsSince / (totalDuration / 2));
            if (t <= 0.5) {
              return ((rest / 2) * rest);
            } else {
              return -0.5 * ((--rest) * (rest - 2) - 1);
            }
          }
        });
      }

      // FUNCTIONS

      // Set container width
      function setContainerWidth() {
        // Container
        var width = parseInt($parent.width(), 10);
        $container.width(width);
        // Position frames
        if (o.behind_distance === 'auto') {
          item2_pos = Math.round((width / 4) - (behind_width / 2));
          item3_pos = Math.round((width / 2) - (front_width / 2));
          $item2.css({
            left: item2_pos
          });
          $item4.css({
            left: item4_pos
          });
        }
        item4_pos = (width - item2_pos - behind_width);
        item5_pos = (width - back_width);
        $item3.css({
          left: item3_pos
        });
        $item5.css({
          left: item5_pos
        });
      };
      if (container_100) {
        setContainerWidth();
      }

      // Autoplay functions
      function stopInterval() {
        if (autotimer) {
          clearInterval(autotimer);
          autotimer = false;
        }
      };

      function startInterval() {
        if (autotimer) {
          stopInterval();
        }
        autotimer = setInterval(function() {
          if (o.right_to_left) {
            $item2.click();
          } else {
            $item4.click();
          }
        }, o.autoplay_interval);
      };

      // Move right
      function moveRight(times, state) {
        var $itemimg, eazing, zpeed = o.speed;
        busy = true;
        state = state || false;
        if (!state) {
          if (times > 1) {
            state = 'first';
          } else {
            state = 'normal';
          }
        }

        // Set easing type and easing speed
        if (times > 1 && state === 'first') {
          eazing = o.move_more_easein;
          zpeed = Math.round(o.speed * 0.7);
        } else if (times > 1) {
          eazing = o.move_more_easebetween;
          zpeed = Math.round(o.speed * 0.4);
        } else if (state === 'last') {
          eazing = o.move_more_easeout;
        } else {
          eazing = o.easing;
        }

        // Pause autoplay
        if (o.autoplay) {
          stopInterval();
        }

        // Set next item number
        if (current === (items - 2)) {
          next = 1;
        } else if (current === (items - 1)) {
          next = 2;
          if (next > items) {
            next = 1;
          }
        } else if (current === items) {
          next = 3;
          if (next > items) {
            next = 1;
          }
        } else {
          next = (current + 3);
        }

        // Pre-move callback
        if (typeof pre_move_callback === 'function') {
          var href = $item4.children('a').attr('href');
          if (!href) {
            href = 'no_anchor';
          }
          pre_move_callback(href, containerid, $item4.data('framesource'));
        }

        if (lteie8) {
          // Container height should not animate at the same time as slides in ie
          $container.stop();
          // Hide caption for text_front_only
          if (o.text_front_only) {
            $item3.find('span').hide();
          }
        }

        // Remove item 1
        $item1.removeClass('frame1').addClass('remove').css('z-index', -1);

        // Item 2 becomes item 1
        $newitem1 = $item2.removeClass('frame2').addClass('frame1').stop().animate({
          opacity: o.back_opacity,
          left: 0,
          top: back_top
        }, zpeed, eazing);
        $itemimg = $newitem1.find('img').stop();
        if (ie6 && var_heights) {
          $itemimg.css({
            height: 'auto'
          });
        }
        $itemimg.animate(backimganimate, zpeed, eazing);
        if (!o.text_front_only) {
          $newitem1.find('h6').stop().animate({
              fontSize: back_header
            }, zpeed, eazing)
            .end().find('span').stop().animate(back_span_animate, zpeed, eazing);
        }
        setTimeout(function() {
          $newitem1.css('z-index', 1);
        }, (zpeed / 4));

        // Item 3 becomes item 2
        $newitem2 = $item3.removeClass('frame3').addClass('frame2').stop().animate({
          opacity: o.behind_opacity,
          left: item2_pos,
          top: behind_top
        }, zpeed, eazing);
        $newitem2.find('h6').stop().animate({
            fontSize: behind_header
          }, zpeed, eazing)
          .end().find('span').stop().animate(behind_span_animate, zpeed, eazing);
        $itemimg = $newitem2.find('img').stop();
        if (ie6 && var_heights) {
          $itemimg.css({
            height: 'auto'
          });
        }
        $itemimg.animate(behindimganimate, zpeed, eazing);
        setTimeout(function() {
          $newitem2.css('z-index', 2);
        }, (zpeed / 4));

        // Item 4 becomes item 3
        $newitem3 = $item4.removeClass('frame4').addClass('frame3').stop().animate({
          opacity: 1,
          left: item3_pos,
          top: front_top
        }, zpeed, eazing, function() {
          if (lteie8 && o.text_front_only) {
            $(this).find('h6').stop().css({
                fontSize: front_header
              })
              .end().find('span').stop().css(front_span_animate).fadeIn(200);
          }
          if (lteie8 && var_heights && o.variable_container_height) {
            resetContainerHeight(true);
          }
        });
        $itemimg = $newitem3.find('img').stop();
        if (ie6 && var_heights) {
          $itemimg.css({
            height: 'auto'
          });
        }
        $itemimg.animate(frontimganimate, zpeed, eazing);
        if (!lteie8 || !o.text_front_only) {
          $newitem3.find('h6').stop().animate({
              fontSize: front_header
            }, zpeed, eazing)
            .end().find('span').stop().show().animate(front_span_animate, zpeed, eazing);
        }
        setTimeout(function() {
          $newitem3.css('z-index', 3);
        }, (zpeed / 4));

        // Item 5 becomes item 4
        $newitem4 = $item5.removeClass('frame5').addClass('frame4').stop().animate({
          opacity: o.behind_opacity,
          left: item4_pos,
          top: behind_top
        }, zpeed, eazing);
        $itemimg = $newitem4.find('img').stop();
        if (ie6 && var_heights) {
          $itemimg.css({
            height: 'auto'
          });
        }
        $itemimg.animate(behindimganimate, zpeed, eazing);
        if (!o.text_front_only) {
          $newitem4.find('h6').stop().animate({
              fontSize: behind_header
            }, zpeed, eazing)
            .end().find('span').stop().animate(behind_span_animate, zpeed, eazing);
        }
        setTimeout(function() {
          $newitem4.css('z-index', 2);
        }, (zpeed / 4));

        // Add a new item 5
        $item5 = $li[next].clone();
        $item5.addClass('frame5')
          .prependTo($container)
          .data('framesource', next)
          .show()
          .css({
            opacity: 0,
            left: item5_pos,
            top: back_top
          })
          .animate({
            opacity: o.back_opacity
          }, zpeed, function() {
            // When done animating:
            // Remove pointer cursor from previous item
            $newitem2.find('a *').css({
              cursor: 'default'
            });
            // Continue autoplay
            if (o.autoplay) {
              startInterval();
            }
            // Move 2nd time if requested
            if (times === 2) {
              moveRight(1, 'last');
            }
            // Move more
            else if (times > 1) {
              moveRight(times - 1, 'normal');
            }
            // Add pointer cursor if front frame has a link
            else {
              $newitem3.find('a *').css({
                cursor: 'pointer'
              });
            }
            if (!$newitem3.is(':animated')) {
              // Reenable click events
              busy = false;
              // Make sure old items are removed
              $container.children('.remove').stop().fadeOut(zpeed, function() {
                $(this).remove();
              });
              // Callback: item with this anchor moved forward
              if (typeof move_callback === 'function') {
                var href = $newitem3.children('a').attr('href');
                if (!href) {
                  href = 'no_anchor';
                }
                move_callback(href, containerid, $item3.data('framesource'));
              }
            }
          })
          .find('img').css(newbackimganimate)
          .end().children('a').removeAttr('rel');
        // New frame description
        if (o.text_front_only) {
          $item5.find('h6').css({
              fontSize: behind_header
            })
            .end().find('span').css(behind_span_animate).hide();
        } else {
          $item5.find('h6').css({
              fontSize: back_header
            })
            .end().find('span').css(back_span_animate);
        }
        // Recache
        $item1 = $newitem1;
        $item2 = $newitem2;
        $item3 = $newitem3;
        $item4 = $newitem4;
        // Remove the out of range item
        $container.children('.remove').fadeOut(zpeed, function() {
          $(this).remove();
        });
        // Set new current
        if (current === items) {
          current = 1;
        } else {
          current = (current + 1);
        }
        // Animate container height
        if (!lteie8 && var_heights && o.variable_container_height) {
          resetContainerHeight(true);
        }
      };

      // Move left
      function moveLeft(times, state) {
        var $itemimg, eazing, zpeed = o.speed;
        busy = true;
        state = state || false;
        if (!state) {
          if (times > 1) {
            state = 'first';
          } else {
            state = 'normal';
          }
        }

        // Set easing type and easing speed
        if (times > 1 && state === 'first') {
          eazing = o.move_more_easein;
          zpeed = Math.round(o.speed * 0.7);
        } else if (times > 1) {
          eazing = o.move_more_easebetween;
          zpeed = Math.round(o.speed * 0.4);
        } else if (state === 'last') {
          eazing = o.move_more_easeout;
        } else {
          eazing = o.easing;
        }

        // Pause autoplay
        if (o.autoplay) {
          stopInterval();
        }

        // Set next item number
        if (current === 3) {
          next = items;
        } else if (current === 2) {
          next = (items - 1);
          if (next < 1) {
            next = items;
          }
        } else if (current === 1) {
          next = (items - 2);
          if (next < 1) {
            next = items;
          }
        } else {
          next = (current - 3);
        }

        // Pre-move callback
        if (typeof pre_move_callback === 'function') {
          var href = $item2.children('a').attr('href');
          if (!href) {
            href = 'no_anchor';
          }
          pre_move_callback(href, containerid, $item2.data('framesource'));
        }

        if (lteie8) {
          // Container height should not animate at the same time as slides in ie
          $container.stop();
          // Hide caption for text_front_only
          if (o.text_front_only) {
            $item3.find('span').hide();
          }
        }

        // Remove item 5
        $item5.removeClass('frame5').addClass('remove').css('z-index', -1);

        // Item 4 becomes item 5
        $newitem5 = $item4.removeClass('frame4').addClass('frame5').stop().animate({
          opacity: o.back_opacity,
          left: item5_pos,
          top: back_top
        }, zpeed, eazing);
        $itemimg = $newitem5.find('img').stop();
        if (ie6 && var_heights) {
          $itemimg.css({
            height: 'auto'
          });
        }
        $itemimg.animate(backimganimate, zpeed, eazing);
        if (!o.text_front_only) {
          $newitem5.find('h6').stop().animate({
              fontSize: back_header
            }, zpeed, eazing)
            .end().find('span').stop().animate(back_span_animate, zpeed, eazing);
        }
        setTimeout(function() {
          $newitem5.css('z-index', 1);
        }, (zpeed / 4));

        // Item 3 becomes item 4
        $newitem4 = $item3.removeClass('frame3').addClass('frame4').stop().animate({
          opacity: o.behind_opacity,
          left: item4_pos,
          top: behind_top
        }, zpeed, eazing);
        $newitem4.find('h6').stop().animate({
            fontSize: behind_header
          }, zpeed, eazing)
          .end().find('span').stop().animate(behind_span_animate, zpeed, eazing);
        $itemimg = $newitem4.find('img').stop();
        if (ie6 && var_heights) {
          $itemimg.css({
            height: 'auto'
          });
        }
        $itemimg.animate(behindimganimate, zpeed, eazing);
        setTimeout(function() {
          $newitem4.css('z-index', 2);
        }, (zpeed / 4));

        // Item 2 becomes item 3
        $newitem3 = $item2.removeClass('frame2').addClass('frame3').stop().animate({
          opacity: 1,
          left: item3_pos,
          top: front_top
        }, zpeed, eazing, function() {
          if (lteie8 && o.text_front_only) {
            $(this).find('h6').stop().css({
                fontSize: front_header
              })
              .end().find('span').stop().css(front_span_animate).fadeIn(200);
          }
          if (lteie8 && var_heights && o.variable_container_height) {
            resetContainerHeight(true);
          }
        });
        $itemimg = $newitem3.find('img').stop();
        if (ie6 && var_heights) {
          $itemimg.css({
            height: 'auto'
          });
        }
        $itemimg.animate(frontimganimate, zpeed, eazing);
        if (!lteie8 || !o.text_front_only) {
          $newitem3.find('h6').stop().animate({
              fontSize: front_header
            }, zpeed, eazing)
            .end().find('span').stop().show().animate(front_span_animate, zpeed, eazing);
        }
        setTimeout(function() {
          $newitem3.css('z-index', 3);
        }, (zpeed / 4));

        // Item 1 becomes item 2
        $newitem2 = $item1.removeClass('frame1').addClass('frame2').stop().animate({
          opacity: o.behind_opacity,
          left: item2_pos,
          top: behind_top
        }, zpeed, eazing);
        $itemimg = $newitem2.find('img').stop();
        if (ie6 && var_heights) {
          $itemimg.css({
            height: 'auto'
          });
        }
        $itemimg.animate(behindimganimate, zpeed, eazing);
        if (!o.text_front_only) {
          $newitem2.find('h6').stop().animate({
              fontSize: behind_header
            }, zpeed, eazing)
            .end().find('span').stop().animate(behind_span_animate, zpeed, eazing);
        }
        setTimeout(function() {
          $newitem2.css('z-index', 2);
        }, (zpeed / 4));

        // Add a new item 1
        $item1 = $li[next].clone();
        $item1.addClass('frame1')
          .prependTo($container)
          .data('framesource', next)
          .show()
          .css({
            opacity: 0,
            left: 0,
            top: back_top
          })
          .animate({
            opacity: o.back_opacity
          }, zpeed, function() {
            // When done animating:
            // Remove pointer cursor from previous item
            $newitem4.find('a *').css({
              cursor: 'default'
            });
            // Continue autoplay
            if (o.autoplay) {
              startInterval();
            }
            // Move 2nd time if requested
            if (times === 2) {
              moveLeft(1, 'last');
            }
            // Move more
            else if (times > 1) {
              moveLeft(times - 1, 'normal');
            }
            // Add pointer cursor if front frame has a link
            else {
              $newitem3.find('a *').css({
                cursor: 'pointer'
              });
            }
            if (!$newitem3.is(':animated')) {
              // Reenable click events
              busy = false;
              // Make sure old items are removed
              $container.children('.remove').stop().fadeOut(zpeed, function() {
                $(this).remove();
              });
              // Callback: item with this anchor moved forward
              if (typeof move_callback === 'function') {
                var href = $newitem3.children('a').attr('href');
                if (!href) {
                  href = 'no_anchor';
                }
                move_callback(href, containerid, $item3.data('framesource'));
              }
            }
          })
          .find('img').css(newbackimganimate)
          .end().children('a').removeAttr('rel');
        // New frame description
        if (o.text_front_only) {
          $item1.find('h6').css({
              fontSize: behind_header
            })
            .end().find('span').css(behind_span_animate).hide();
        } else {
          $item1.find('h6').css({
              fontSize: back_header
            })
            .end().find('span').css(back_span_animate);
        }
        // Recache
        $item2 = $newitem2;
        $item3 = $newitem3;
        $item4 = $newitem4;
        $item5 = $newitem5;
        // Remove the out of range item
        $container.children('.remove').fadeOut(zpeed, function() {
          $(this).remove();
        });
        // Set new current
        if (current === 1) {
          current = items;
        } else {
          current = (current - 1);
        }
        // Animate container height
        if (!lteie8 && var_heights && o.variable_container_height) {
          resetContainerHeight(true);
        }
      };

      // PUBLIC/EXTERNAL FUNCTIONS

      // Previous frame
      window[containerid + '_ext_prev'] =
        window[containerid + '_prev'] =
        window[containerid + '_previous'] =
        function(times) {
          times = times || 1;
          if (o.right_to_left) {
            moveRight(times);
          } else {
            moveLeft(times);
          }
        };

      // Next frame
      window[containerid + '_ext_next'] =
        window[containerid + '_next'] =
        function(times) {
          times = times || 1;
          if (o.right_to_left) {
            moveLeft(times);
          } else {
            moveRight(times);
          }
        };

      // Stop autoplay
      window[containerid + '_stopautoplay'] = function() {
        if (o.autoplay) {
          stopInterval();
        }
        o.autoplay = false;
      };

      // Start autoplay
      window[containerid + '_startautoplay'] = function() {
        if (!o.autoplay) {
          startInterval();
        }
        o.autoplay = true;
      };

      // Go to specific frame
      window[containerid + '_goto'] = function(frame) {
        frame = frame || false;
        if (frame) {
          frame = parseInt(frame, 10);
          // If it's a number and not the active frame and the frame exists
          if (parseFloat(frame) === frame && current !== frame && items >= frame) {
            var steps = 0,
              direction;
            if (current < frame) {
              if (frame - current <= (current + (items - frame))) {
                direction = 'right';
                steps = frame - current;
              } else {
                direction = 'left';
                steps = current + (items - frame);
              }
            } else {
              if (((items - current) + frame) <= current - frame) {
                direction = 'right';
                steps = (items - current) + frame;
              } else {
                direction = 'left';
                steps = current - frame;
              }
            }
            if (direction === 'right') {
              moveRight(steps);
            } else {
              moveLeft(steps);
            }
          }
        }
      };

      // ACTIONS

      // Frame 1 click (move 2 steps left)
      $container.delegate('.frame1', 'click', function(e) {
        if (o.freescroll || !busy) {
          if (o.never_move_twice) {
            moveLeft(1);
          } else if (o.move_more_directly) {
            moveLeft(1);
            moveLeft(1);
          } else {
            moveLeft(2);
          }
          e.preventDefault();
        }
      });
      // Frame 2 click (move 1 step left)
      $container.delegate('.frame2', 'click', function(e) {
        if (o.freescroll || !busy) {
          moveLeft(1);
          e.preventDefault();
        }
      });
      // Frame 4 click (move 1 step right)
      $container.delegate('.frame4', 'click', function(e) {
        if (o.freescroll || !busy) {
          moveRight(1);
          e.preventDefault();
        }
      });
      // Frame 5 click (move 2 steps right)
      $container.delegate('.frame5', 'click', function(e) {
        if (o.freescroll || !busy) {
          if (o.never_move_twice) {
            moveRight(1);
          } else if (o.move_more_directly) {
            moveRight(1);
            moveRight(1);
          } else {
            moveRight(2);
          }
          e.preventDefault();
        }
      });
      if (o.move_on_hover) {
        // Frame 1 hover (move 2 steps left)
        $container.delegate('.frame1', 'mousemove', function() {
          $item1.click();
        });
        // Frame 2 hover (move 1 step left)
        $container.delegate('.frame2', 'mousemove', function() {
          $item2.click();
        });
        // Frame 4 hover (move 1 step right)
        $container.delegate('.frame4', 'mousemove', function() {
          $item4.click();
        });
        // Frame 5 hover (move 2 steps right)
        $container.delegate('.frame5', 'mousemove', function() {
          $item5.click();
        });
      }

      // Mouse-over center frame: zoom in
      var hover_animateframe = {
        left: '-=' + Math.floor(o.front_img_width * (o.hovergrowth / 2)),
        top: '-=' + Math.floor((o.front_img_width * (o.hovergrowth)) / 2)
      };
      if (!var_heights) {
        hover_animateframe.top = '-=' + Math.floor(front_img_height * o.hovergrowth);
      }
      var hover_frame2animate = {
        left: '-=' + Math.floor(behind_img_width * o.hovergrowth)
      };
      var hover_frame4animate = {
        left: '+=' + Math.floor(behind_img_width * o.hovergrowth)
      };
      var hover_animateimage = {
        width: Math.floor(o.front_img_width * (1 + o.hovergrowth))
      };
      var hover_iespananimate = {
        width: '+=' + Math.floor(o.hovergrowth * o.front_img_width)
      };
      if (!var_heights) {
        hover_animateimage.height = Math.floor(front_img_height * (1 + o.hovergrowth));
      }
      var hoverout_animateimage = {
        width: o.front_img_width
      };
      if (!var_heights) {
        hoverout_animateimage.height = front_img_height;
      }
      $container.delegate('.frame3', 'mouseenter mouseleave', function(e) {
        if (e.type === 'mouseenter' && !busy && !hovering) {
          // Prevent double effect
          hovering = true;
          if (o.autoplay) {
            stopInterval();
          }
          // Prepare ie6
          if (var_heights && ie6) {
            hover_animateimage.height = Math.floor($li[$item3.data('framesource')].data('displayheight') * (1 + o.hovergrowth));
          }
          // Animate
          $item3.addClass('zoomed')
            .stop(true, true).animate(hover_animateframe, hoverspeed)
            .find('img').stop().animate(hover_animateimage, hoverspeed);
          $item2.stop(true, true).animate(hover_frame2animate, hoverspeed);
          $item4.stop(true, true).animate(hover_frame4animate, hoverspeed);
          // Set span width for IE6
          if (ie6) {
            $item3.find('span').stop().animate(hover_iespananimate, hoverspeed);
          }
        }
        // Mouse-out center frame: zoom out
        else if (!busy) {
          hovering = false;
          if (o.autoplay) {
            startInterval();
          }
          // Prepare ie6
          if (var_heights && ie6) {
            hoverout_animateimage.height = $li[$item3.data('framesource')].data('displayheight');
          }
          // Animate
          $item3.stop().animate({
              left: item3_pos,
              top: front_top
            }, hoverspeed)
            .find('img').stop().animate(hoverout_animateimage, hoverspeed, function() {
              $item3.removeClass('zoomed');
            });
          $item2.stop().animate({
            left: item2_pos
          }, hoverspeed);
          $item4.stop().animate({
            left: item4_pos
          }, hoverspeed);
          // Set span width for IE6
          if (ie6) {
            $container.find('.zoomed span').stop().animate(front_span_animate, hoverspeed);
          }
        }
      });

      // Also zoom in if center frame is slided in under your cursor (Excluding IE)
      if (!ie) {
        $container.delegate('.frame3:not(.zoomed)', 'mousemove', function() {
          if (!hovering) {
            $item3.trigger('mouseenter');
          }
        });
      }

      // Callback: when a front-frame link is clicked
      $container.delegate('.frame3 a', 'click', function(e) {
        if (typeof link_callback === 'function') {
          link_callback($(this).attr('href'), containerid);
        }
        // Stop autoplay
        if (o.autoplay && o.stop_autoplay_on_click) {
          stopInterval();
          o.autoplay = false;
        }
        // Trigger lightbox link
        if (o.lightbox_support) {
          // Find original frame and click that
          $lis.eq(current - 1).children('a').click();
          e.preventDefault();
        }
      });

      // Keystrokes
      if (o.keyboard) {
        $(document).keydown(function(e) {
          // Right arrow key = move right (also Enter key / Space key when language is left-to-right)
          if (e.keyCode === 39 || (!o.right_to_left && (e.keyCode === 13 || e.keyCode === 32))) {
            moveRight(1);
          }
          // Left arrow key = move left (also Enter key / Space key when language is right-to-left)
          if (e.keyCode === 37 || (o.right_to_left && (e.keyCode === 13 || e.keyCode === 32))) {
            moveLeft(1);
          }
        });
      }

      // Initiate first autoplay
      if (o.autoplay) {
        startInterval();
      }

      // Window resize (100% container width)
      if (container_100) {
        $window.resize(function() {
          setContainerWidth();
        });
      }

      // End plugin wrap
    });
    return this;
  };
})(jQuery);

/** jquery.prettyPhoto.js */
/* ------------------------------------------------------------------------
  Class: prettyPhoto
  Use: Lightbox clone for jQuery
  Author: Stephane Caron (http://www.no-margin-for-errors.com)
  Version: 3.1.5
------------------------------------------------------------------------- */
(function($) {
  $.prettyPhoto = {
    version: '3.1.5'
  };

  $.fn.prettyPhoto = function(pp_settings) {
    pp_settings = jQuery.extend({
      hook: 'rel',
      /* the attribute tag to use for prettyPhoto hooks. default: 'rel'. For HTML5, use "data-rel" or similar. */
      animation_speed: 'fast',
      /* fast/slow/normal */
      ajaxcallback: function() {},
      slideshow: 5000,
      /* false OR interval time in ms */
      autoplay_slideshow: false,
      /* true/false */
      opacity: 0.80,
      /* Value between 0 and 1 */
      show_title: true,
      /* true/false */
      allow_resize: true,
      /* Resize the photos bigger than viewport. true/false */
      allow_expand: true,
      /* Allow the user to expand a resized image. true/false */
      default_width: 500,
      default_height: 344,
      counter_separator_label: '/',
      /* The separator for the gallery counter 1 "of" 2 */
      theme: 'pp_default',
      /* light_rounded / dark_rounded / light_square / dark_square / facebook */
      horizontal_padding: 20,
      /* The padding on each side of the picture */
      hideflash: false,
      /* Hides all the flash object on a page, set to TRUE if flash appears over prettyPhoto */
      wmode: 'opaque',
      /* Set the flash wmode attribute */
      autoplay: true,
      /* Automatically start videos: True/False */
      modal: false,
      /* If set to true, only the close button will close the window */
      deeplinking: true,
      /* Allow prettyPhoto to update the url to enable deeplinking. */
      overlay_gallery: false,
      /* If set to true, a gallery will overlay the fullscreen image on mouse over */
      overlay_gallery_max: 30,
      /* Maximum number of pictures in the overlay gallery */
      keyboard_shortcuts: true,
      /* Set to false if you open forms inside prettyPhoto */
      changepicturecallback: function() {},
      /* Called everytime an item is shown/changed */
      callback: function() {},
      /* Called when prettyPhoto is closed */
      ie6_fallback: true,
      markup: '<div class="pp_pic_holder"> \
            <div class="pp_top"> \
            <a class="pp_close" href="#">Close</a> \
            </div> \
            <div class="pp_content_container"> \
              <div class="pp_left"> \
              <div class="pp_right"> \
                <div class="pp_content"> \
                  <div class="pp_loaderIcon"></div> \
                  <div class="pp_fade"> \
                    <a href="#" class="pp_expand" title="Expand the image">Expand</a> \
                    <div class="pp_hoverContainer"> \
                      <a class="pp_next" href="#">next</a> \
                      <a class="pp_previous" href="#">previous</a> \
                    </div> \
                    <div id="pp_full_res"></div> \
                    <div class="pp_details"> \
                    <!--  <div class="pp_nav"> \
                        <a href="#" class="pp_arrow_previous">Previous</a> \
                        <p class="currentTextHolder">0/0</p> \
                        <a href="#" class="pp_arrow_next">Next</a> \
                      </div> --> \
                      <div class="pp_social">{pp_social}</div> \
                    </div> \
                  </div> \
                </div> \
              </div> \
              </div> \
            </div> \
            <div class="pp_bottom"> \
            <p class="pp_description"></p> \
            <div class="ppt">&nbsp;</div> \
            </div> \
          </div> \
          <div class="pp_overlay"></div>',
      gallery_markup: '<div class="pp_gallery"> \
                <a href="#" class="pp_arrow_previous">Previous</a> \
                <div> \
                  <ul> \
                    {gallery} \
                  </ul> \
                </div> \
                <a href="#" class="pp_arrow_next">Next</a> \
              </div>',
      image_markup: '<img id="fullResImage" src="{path}" />',
      flash_markup: '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="{width}" height="{height}"><param name="wmode" value="{wmode}" /><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="movie" value="{path}" /><embed src="{path}" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="{width}" height="{height}" wmode="{wmode}"></embed></object>',
      quicktime_markup: '<object classid="clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B" codebase="http://www.apple.com/qtactivex/qtplugin.cab" height="{height}" width="{width}"><param name="src" value="{path}"><param name="autoplay" value="{autoplay}"><param name="type" value="video/quicktime"><embed src="{path}" height="{height}" width="{width}" autoplay="{autoplay}" type="video/quicktime" pluginspage="http://www.apple.com/quicktime/download/"></embed></object>',
      iframe_markup: '<iframe src ="{path}" width="{width}" height="{height}" frameborder="no"></iframe>',
      inline_markup: '<div class="pp_inline">{content}</div>',
      custom_markup: '',
      social_tools: false /* html or false to disable */
        //social_tools: '<div class="twitter"><a href="http://twitter.com/share" class="twitter-share-button" data-count="none">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script></div><div class="facebook"><iframe src="//www.facebook.com/plugins/like.php?locale=en_US&href={location_href}&amp;layout=button_count&amp;show_faces=true&amp;width=500&amp;action=like&amp;font&amp;colorscheme=light&amp;height=23" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:500px; height:23px;" allowTransparency="true"></iframe></div>' /* html or false to disable */
    }, pp_settings);

    // Global variables accessible only by prettyPhoto
    var matchedObjects = this,
      percentBased = false,
      pp_dimensions, pp_open,

      // prettyPhoto container specific
      pp_contentHeight, pp_contentWidth, pp_containerHeight, pp_containerWidth,

      // Window size
      windowHeight = $(window).height(),
      windowWidth = $(window).width(),

      // Global elements
      pp_slideshow;

    doresize = true, scroll_pos = _get_scroll();

    // Window/Keyboard events
    $(window).unbind('resize.prettyphoto').bind('resize.prettyphoto', function() {
      _center_overlay();
      _resize_overlay();
    });

    if (pp_settings.keyboard_shortcuts) {
      $(document).unbind('keydown.prettyphoto').bind('keydown.prettyphoto', function(e) {
        if (typeof $pp_pic_holder != 'undefined') {
          if ($pp_pic_holder.is(':visible')) {
            switch (e.keyCode) {
              case 37:
                $.prettyPhoto.changePage('previous');
                e.preventDefault();
                break;
              case 39:
                $.prettyPhoto.changePage('next');
                e.preventDefault();
                break;
              case 27:
                if (!settings.modal)
                  $.prettyPhoto.close();
                e.preventDefault();
                break;
            };
            // return false;
          };
        };
      });
    };

    /**
     * Initialize prettyPhoto.
     */
    $.prettyPhoto.initialize = function() {

      settings = pp_settings;

      if (settings.theme == 'pp_default') settings.horizontal_padding = 16;

      // Find out if the picture is part of a set
      theRel = $(this).parent().attr(settings.hook);

      //alert (theRel);
      galleryRegExp = /\[(?:.*)\]/;
      isSet = (galleryRegExp.exec(theRel)) ? true : false;
      //alert (isSet);
      isSet = true;

      // Put the SRCs, TITLEs, ALTs into an array.
      pp_images = (isSet) ? jQuery.map(matchedObjects, function(n, i) {
        if ($(n).parent().attr(settings.hook).indexOf(theRel) != -1) return $(n).attr('href');
      }) : $.makeArray($(this).attr('href'));
      pp_titles = (isSet) ? jQuery.map(matchedObjects, function(n, i) {
        if ($(n).parent().attr(settings.hook).indexOf(theRel) != -1) return ($(n).find('img').attr('alt')) ? $(n).find('img').attr('alt') : "";
      }) : $.makeArray($(this).find('img').attr('alt'));
      pp_descriptions = (isSet) ? jQuery.map(matchedObjects, function(n, i) {
        if ($(n).parent().attr(settings.hook).indexOf(theRel) != -1) return ($(n).attr('title')) ? $(n).attr('title') : "";
      }) : $.makeArray($(this).attr('title'));

      if (pp_images.length > settings.overlay_gallery_max) settings.overlay_gallery = false;

      set_position = jQuery.inArray($(this).attr('href'), pp_images); // Define where in the array the clicked item is positionned
      rel_index = (isSet) ? set_position : $("a[" + settings.hook + "^='" + theRel + "']").index($(this));

      _build_overlay(this); // Build the overlay {this} being the caller

      if (settings.allow_resize)
        $(window).bind('scroll.prettyphoto', function() {
          _center_overlay();
        });


      $.prettyPhoto.open();

      return false;
    }


    /**
     * Opens the prettyPhoto modal box.
     * @param image {String,Array} Full path to the image to be open, can also be an array containing full images paths.
     * @param title {String,Array} The title to be displayed with the picture, can also be an array containing all the titles.
     * @param description {String,Array} The description to be displayed with the picture, can also be an array containing all the descriptions.
     */
    $.prettyPhoto.open = function(event) {
      if (typeof settings == "undefined") { // Means it's an API call, need to manually get the settings and set the variables
        settings = pp_settings;
        pp_images = $.makeArray(arguments[0]);
        pp_titles = (arguments[1]) ? $.makeArray(arguments[1]) : $.makeArray("");
        pp_descriptions = (arguments[2]) ? $.makeArray(arguments[2]) : $.makeArray("");
        isSet = (pp_images.length > 1) ? true : false;
        set_position = (arguments[3]) ? arguments[3] : 0;
        _build_overlay(event.target); // Build the overlay {this} being the caller
      }

      if (settings.hideflash) $('object,embed,iframe[src*=youtube],iframe[src*=vimeo]').css('visibility', 'hidden'); // Hide the flash

      _checkPosition($(pp_images).size()); // Hide the next/previous links if on first or last images.

      $('.pp_loaderIcon').show();

      if (settings.deeplinking)
        setHashtag();

      // Rebuild Facebook Like Button with updated href
      if (settings.social_tools) {
        facebook_like_link = settings.social_tools.replace('{location_href}', encodeURIComponent(location.href));
        $pp_pic_holder.find('.pp_social').html(facebook_like_link);
      }

      // Fade the content in
      if ($ppt.is(':hidden')) $ppt.css('opacity', 0).show();
      $pp_overlay.show().fadeTo(settings.animation_speed, settings.opacity);

      // Display the current position
      $pp_pic_holder.find('.currentTextHolder').text((set_position + 1) + settings.counter_separator_label + $(pp_images).size());

      // Set the description
      if (typeof pp_descriptions[set_position] != 'undefined' && pp_descriptions[set_position] != "") {
        $pp_pic_holder.find('.pp_description').show().html(unescape(pp_descriptions[set_position]));
      } else {
        $pp_pic_holder.find('.pp_description').hide();
      }

      // Get the dimensions
      movie_width = (parseFloat(getParam('width', pp_images[set_position]))) ? getParam('width', pp_images[set_position]) : settings.default_width.toString();
      movie_height = (parseFloat(getParam('height', pp_images[set_position]))) ? getParam('height', pp_images[set_position]) : settings.default_height.toString();

      // If the size is % based, calculate according to window dimensions
      percentBased = false;
      if (movie_height.indexOf('%') != -1) {
        movie_height = parseFloat(($(window).height() * parseFloat(movie_height) / 100) - 150);
        percentBased = true;
      }
      if (movie_width.indexOf('%') != -1) {
        movie_width = parseFloat(($(window).width() * parseFloat(movie_width) / 100) - 150);
        percentBased = true;
      }

      // Fade the holder
      $pp_pic_holder.fadeIn(function() {
        // Set the title
        (settings.show_title && pp_titles[set_position] != "" && typeof pp_titles[set_position] != "undefined") ? $ppt.html(unescape(pp_titles[set_position])): $ppt.html('&nbsp;');

        imgPreloader = "";
        skipInjection = false;

        // Inject the proper content
        switch (_getFileType(pp_images[set_position])) {
          case 'image':
            imgPreloader = new Image();

            // Preload the neighbour images
            nextImage = new Image();
            if (isSet && set_position < $(pp_images).size() - 1) nextImage.src = pp_images[set_position + 1];
            prevImage = new Image();
            if (isSet && pp_images[set_position - 1]) prevImage.src = pp_images[set_position - 1];

            $pp_pic_holder.find('#pp_full_res')[0].innerHTML = settings.image_markup.replace(/{path}/g, pp_images[set_position]);

            imgPreloader.onload = function() {
              // Fit item to viewport
              pp_dimensions = _fitToViewport(imgPreloader.width, imgPreloader.height);

              _showContent();
            };

            imgPreloader.onerror = function() {
              alert('Image cannot be loaded. Make sure the path is correct and image exist.');
              $.prettyPhoto.close();
            };

            imgPreloader.src = pp_images[set_position];
            break;

          case 'youtube':
            pp_dimensions = _fitToViewport(movie_width, movie_height); // Fit item to viewport

            // Regular youtube link
            movie_id = getParam('v', pp_images[set_position]);

            // youtu.be link
            if (movie_id == "") {
              movie_id = pp_images[set_position].split('youtu.be/');
              movie_id = movie_id[1];
              if (movie_id.indexOf('?') > 0)
                movie_id = movie_id.substr(0, movie_id.indexOf('?')); // Strip anything after the ?

              if (movie_id.indexOf('&') > 0)
                movie_id = movie_id.substr(0, movie_id.indexOf('&')); // Strip anything after the &
            }

            movie = 'http://www.youtube.com/embed/' + movie_id;
            (getParam('rel', pp_images[set_position])) ? movie += "?rel=" + getParam('rel', pp_images[set_position]): movie += "?rel=1";

            if (settings.autoplay) movie += "&autoplay=1";

            toInject = settings.iframe_markup.replace(/{width}/g, pp_dimensions['width']).replace(/{height}/g, pp_dimensions['height']).replace(/{wmode}/g, settings.wmode).replace(/{path}/g, movie);
            break;

          case 'vimeo':
            pp_dimensions = _fitToViewport(movie_width, movie_height); // Fit item to viewport

            movie_id = pp_images[set_position];
            var regExp = /http(s?):\/\/(www\.)?vimeo.com\/(\d+)/;
            var match = movie_id.match(regExp);

            movie = 'http://player.vimeo.com/video/' + match[3] + '?title=0&amp;byline=0&amp;portrait=0';
            if (settings.autoplay) movie += "&autoplay=1;";

            vimeo_width = pp_dimensions['width'] + '/embed/?moog_width=' + pp_dimensions['width'];

            toInject = settings.iframe_markup.replace(/{width}/g, vimeo_width).replace(/{height}/g, pp_dimensions['height']).replace(/{path}/g, movie);
            break;

          case 'quicktime':
            pp_dimensions = _fitToViewport(movie_width, movie_height); // Fit item to viewport
            pp_dimensions['height'] += 15;
            pp_dimensions['contentHeight'] += 15;
            pp_dimensions['containerHeight'] += 15; // Add space for the control bar

            toInject = settings.quicktime_markup.replace(/{width}/g, pp_dimensions['width']).replace(/{height}/g, pp_dimensions['height']).replace(/{wmode}/g, settings.wmode).replace(/{path}/g, pp_images[set_position]).replace(/{autoplay}/g, settings.autoplay);
            break;

          case 'flash':
            pp_dimensions = _fitToViewport(movie_width, movie_height); // Fit item to viewport

            flash_vars = pp_images[set_position];
            flash_vars = flash_vars.substring(pp_images[set_position].indexOf('flashvars') + 10, pp_images[set_position].length);

            filename = pp_images[set_position];
            filename = filename.substring(0, filename.indexOf('?'));

            toInject = settings.flash_markup.replace(/{width}/g, pp_dimensions['width']).replace(/{height}/g, pp_dimensions['height']).replace(/{wmode}/g, settings.wmode).replace(/{path}/g, filename + '?' + flash_vars);
            break;

          case 'iframe':
            pp_dimensions = _fitToViewport(movie_width, movie_height); // Fit item to viewport

            frame_url = pp_images[set_position];
            frame_url = frame_url.substr(0, frame_url.indexOf('iframe') - 1);

            toInject = settings.iframe_markup.replace(/{width}/g, pp_dimensions['width']).replace(/{height}/g, pp_dimensions['height']).replace(/{path}/g, frame_url);
            break;

          case 'ajax':
            doresize = false; // Make sure the dimensions are not resized.
            pp_dimensions = _fitToViewport(movie_width, movie_height);
            doresize = true; // Reset the dimensions

            skipInjection = true;
            $.get(pp_images[set_position], function(responseHTML) {
              toInject = settings.inline_markup.replace(/{content}/g, responseHTML);
              $pp_pic_holder.find('#pp_full_res')[0].innerHTML = toInject;
              _showContent();
            });

            break;

          case 'custom':
            pp_dimensions = _fitToViewport(movie_width, movie_height); // Fit item to viewport

            toInject = settings.custom_markup;
            break;

          case 'inline':
            // to get the item height clone it, apply default width, wrap it in the prettyPhoto containers , then delete
            myClone = $(pp_images[set_position]).clone().append('<br clear="all" />').css({
              'width': settings.default_width
            }).wrapInner('<div id="pp_full_res"><div class="pp_inline"></div></div>').appendTo($('body')).show();
            doresize = false; // Make sure the dimensions are not resized.
            pp_dimensions = _fitToViewport($(myClone).width(), $(myClone).height());
            doresize = true; // Reset the dimensions
            $(myClone).remove();
            toInject = settings.inline_markup.replace(/{content}/g, $(pp_images[set_position]).html());
            break;
        };

        if (!imgPreloader && !skipInjection) {
          $pp_pic_holder.find('#pp_full_res')[0].innerHTML = toInject;

          // Show content
          _showContent();
        };
      });

      return false;
    };


    /**
     * Change page in the prettyPhoto modal box
     * @param direction {String} Direction of the paging, previous or next.
     */
    $.prettyPhoto.changePage = function(direction) {
      currentGalleryPage = 0;

      if (direction == 'previous') {
        set_position--;
        if (set_position < 0) set_position = $(pp_images).size() - 1;
      } else if (direction == 'next') {
        set_position++;
        if (set_position > $(pp_images).size() - 1) set_position = 0;
      } else {
        set_position = direction;
      };

      rel_index = set_position;

      if (!doresize) doresize = true; // Allow the resizing of the images
      if (settings.allow_expand) {
        $('.pp_contract').removeClass('pp_contract').addClass('pp_expand');
      }

      _hideContent(function() {
        $.prettyPhoto.open();
      });
    };


    /**
     * Change gallery page in the prettyPhoto modal box
     * @param direction {String} Direction of the paging, previous or next.
     */
    $.prettyPhoto.changeGalleryPage = function(direction) {
      if (direction == 'next') {
        currentGalleryPage++;

        if (currentGalleryPage > totalPage) currentGalleryPage = 0;
      } else if (direction == 'previous') {
        currentGalleryPage--;

        if (currentGalleryPage < 0) currentGalleryPage = totalPage;
      } else {
        currentGalleryPage = direction;
      };

      slide_speed = (direction == 'next' || direction == 'previous') ? settings.animation_speed : 0;

      slide_to = currentGalleryPage * (itemsPerPage * itemWidth);

      $pp_gallery.find('ul').animate({
        left: -slide_to
      }, slide_speed);
    };


    /**
     * Start the slideshow...
     */
    $.prettyPhoto.startSlideshow = function() {
      if (typeof pp_slideshow == 'undefined') {
        $pp_pic_holder.find('.pp_play').unbind('click').removeClass('pp_play').addClass('pp_pause').click(function() {
          $.prettyPhoto.stopSlideshow();
          return false;
        });
        pp_slideshow = setInterval($.prettyPhoto.startSlideshow, settings.slideshow);
      } else {
        $.prettyPhoto.changePage('next');
      };
    }


    /**
     * Stop the slideshow...
     */
    $.prettyPhoto.stopSlideshow = function() {
      $pp_pic_holder.find('.pp_pause').unbind('click').removeClass('pp_pause').addClass('pp_play').click(function() {
        $.prettyPhoto.startSlideshow();
        return false;
      });
      clearInterval(pp_slideshow);
      pp_slideshow = undefined;
    }


    /**
     * Closes prettyPhoto.
     */
    $.prettyPhoto.close = function() {
      if ($pp_overlay.is(":animated")) return;

      $.prettyPhoto.stopSlideshow();

      $pp_pic_holder.stop().find('object,embed').css('visibility', 'hidden');

      $('div.pp_pic_holder,div.ppt,.pp_fade').fadeOut(settings.animation_speed, function() {
        $(this).remove();
      });

      $pp_overlay.fadeOut(settings.animation_speed, function() {

        if (settings.hideflash) $('object,embed,iframe[src*=youtube],iframe[src*=vimeo]').css('visibility', 'visible'); // Show the flash

        $(this).remove(); // No more need for the prettyPhoto markup

        $(window).unbind('scroll.prettyphoto');

        clearHashtag();

        settings.callback();

        doresize = true;

        pp_open = false;

        delete settings;
      });
    };

    /**
     * Set the proper sizes on the containers and animate the content in.
     */
    function _showContent() {
      $('.pp_loaderIcon').hide();

      // Calculate the opened top position of the pic holder
      projectedTop = scroll_pos['scrollTop'] + ((windowHeight / 2) - (pp_dimensions['containerHeight'] / 2));
      if (projectedTop < 0) projectedTop = 0;

      $ppt.fadeTo(settings.animation_speed, 1);

      // Resize the content holder
      $pp_pic_holder.find('.pp_content')
        .animate({
          height: pp_dimensions['contentHeight'],
          width: pp_dimensions['contentWidth']
        }, settings.animation_speed);

      // Resize picture the holder
      $pp_pic_holder.animate({
        'top': projectedTop,
        'left': ((windowWidth / 2) - (pp_dimensions['containerWidth'] / 2) < 0) ? 0 : (windowWidth / 2) - (pp_dimensions['containerWidth'] / 2),
        width: pp_dimensions['containerWidth']
      }, settings.animation_speed, function() {
        $pp_pic_holder.find('.pp_hoverContainer,#fullResImage').height(pp_dimensions['height']).width(pp_dimensions['width']);

        $pp_pic_holder.find('.pp_fade').fadeIn(settings.animation_speed); // Fade the new content

        // Show the nav
        if (isSet && _getFileType(pp_images[set_position]) == "image") {
          $pp_pic_holder.find('.pp_hoverContainer').show();
        } else {
          $pp_pic_holder.find('.pp_hoverContainer').hide();
        }

        if (settings.allow_expand) {
          if (pp_dimensions['resized']) { // Fade the resizing link if the image is resized
            $('a.pp_expand,a.pp_contract').show();
          } else {
            $('a.pp_expand').hide();
          }
        }

        if (settings.autoplay_slideshow && !pp_slideshow && !pp_open) $.prettyPhoto.startSlideshow();

        settings.changepicturecallback(); // Callback!

        pp_open = true;
      });

      _insert_gallery();
      pp_settings.ajaxcallback();
    };

    /**
     * Hide the content...DUH!
     */
    function _hideContent(callback) {
      // Fade out the current picture
      $pp_pic_holder.find('#pp_full_res object,#pp_full_res embed').css('visibility', 'hidden');
      $pp_pic_holder.find('.pp_fade').fadeOut(settings.animation_speed, function() {
        $('.pp_loaderIcon').show();

        callback();
      });
    };

    /**
     * Check the item position in the gallery array, hide or show the navigation links
     * @param setCount {integer} The total number of items in the set
     */
    function _checkPosition(setCount) {
      (setCount > 1) ? $('.pp_nav').show(): $('.pp_nav').hide(); // Hide the bottom nav if it's not a set.
    };

    /**
     * Resize the item dimensions if it's bigger than the viewport
     * @param width {integer} Width of the item to be opened
     * @param height {integer} Height of the item to be opened
     * @return An array containin the "fitted" dimensions
     */
    function _fitToViewport(width, height) {
      resized = false;

      _getDimensions(width, height);

      // Define them in case there's no resize needed
      imageWidth = width, imageHeight = height;

      if (((pp_containerWidth > windowWidth) || (pp_containerHeight > windowHeight)) && doresize && settings.allow_resize && !percentBased) {
        resized = true, fitting = false;

        while (!fitting) {
          if ((pp_containerWidth > windowWidth)) {
            imageWidth = (windowWidth - 200);
            imageHeight = (height / width) * imageWidth;
          } else if ((pp_containerHeight > windowHeight)) {
            imageHeight = (windowHeight - 200);
            imageWidth = (width / height) * imageHeight;
          } else {
            fitting = true;
          };

          pp_containerHeight = imageHeight, pp_containerWidth = imageWidth;
        };



        if ((pp_containerWidth > windowWidth) || (pp_containerHeight > windowHeight)) {
          _fitToViewport(pp_containerWidth, pp_containerHeight)
        };

        _getDimensions(imageWidth, imageHeight);
      };

      return {
        width: Math.floor(imageWidth),
        height: Math.floor(imageHeight),
        containerHeight: Math.floor(pp_containerHeight),
        containerWidth: Math.floor(pp_containerWidth) + (settings.horizontal_padding * 2),
        contentHeight: Math.floor(pp_contentHeight),
        contentWidth: Math.floor(pp_contentWidth),
        resized: resized
      };
    };

    /**
     * Get the containers dimensions according to the item size
     * @param width {integer} Width of the item to be opened
     * @param height {integer} Height of the item to be opened
     */
    function _getDimensions(width, height) {
      width = parseFloat(width);
      height = parseFloat(height);

      // Get the details height, to do so, I need to clone it since it's invisible
      $pp_details = $pp_pic_holder.find('.pp_details');
      $pp_details.width(width);
      detailsHeight = parseFloat($pp_details.css('marginTop')) + parseFloat($pp_details.css('marginBottom'));

      $pp_details = $pp_details.clone().addClass(settings.theme).width(width).appendTo($('body')).css({
        'position': 'absolute',
        'top': -10000
      });
      detailsHeight += $pp_details.height();
      detailsHeight = (detailsHeight <= 34) ? 36 : detailsHeight; // Min-height for the details
      $pp_details.remove();

      // Get the titles height, to do so, I need to clone it since it's invisible
      $pp_title = $pp_pic_holder.find('.ppt');
      $pp_title.width(width);
      titleHeight = parseFloat($pp_title.css('marginTop')) + parseFloat($pp_title.css('marginBottom'));
      $pp_title = $pp_title.clone().appendTo($('body')).css({
        'position': 'absolute',
        'top': -10000
      });
      titleHeight += $pp_title.height();
      $pp_title.remove();

      // Get the container size, to resize the holder to the right dimensions
      //pp_contentHeight = height + detailsHeight;
      pp_contentHeight = height;
      pp_contentWidth = width;
      pp_containerHeight = pp_contentHeight + titleHeight + $pp_pic_holder.find('.pp_top').height(); // + $pp_pic_holder.find('.pp_bottom').height();
      pp_containerWidth = width;

      $(".pp_next").css('margin-top', (height / 2) + 'px');
      $(".pp_previous").css('margin-top', (height / 2) + 'px');
    }

    function _getFileType(itemSrc) {
      if (itemSrc.match(/youtube\.com\/watch/i) || itemSrc.match(/youtu\.be/i)) {
        return 'youtube';
      } else if (itemSrc.match(/vimeo\.com/i)) {
        return 'vimeo';
      } else if (itemSrc.match(/\b.mov\b/i)) {
        return 'quicktime';
      } else if (itemSrc.match(/\b.swf\b/i)) {
        return 'flash';
      } else if (itemSrc.match(/\biframe=true\b/i)) {
        return 'iframe';
      } else if (itemSrc.match(/\bajax=true\b/i)) {
        return 'ajax';
      } else if (itemSrc.match(/\bcustom=true\b/i)) {
        return 'custom';
      } else if (itemSrc.substr(0, 1) == '#') {
        return 'inline';
      } else {
        return 'image';
      };
    };

    function _center_overlay() {
      if (doresize && typeof $pp_pic_holder != 'undefined') {
        scroll_pos = _get_scroll();
        contentHeight = $pp_pic_holder.height(), contentwidth = $pp_pic_holder.width();

        projectedTop = (windowHeight / 2) + scroll_pos['scrollTop'] - (contentHeight / 2);
        if (projectedTop < 0) projectedTop = 0;

        if (contentHeight > windowHeight)
          return;
        /*
                $pp_pic_holder.css({
                  'top': projectedTop,
                  'left': (windowWidth/2) + scroll_pos['scrollLeft'] - (contentwidth/2)
                });
          */
      };
    };

    function _get_scroll() {
      if (self.pageYOffset) {
        return {
          scrollTop: self.pageYOffset,
          scrollLeft: self.pageXOffset
        };
      } else if (document.documentElement && document.documentElement.scrollTop) { // Explorer 6 Strict
        return {
          scrollTop: document.documentElement.scrollTop,
          scrollLeft: document.documentElement.scrollLeft
        };
      } else if (document.body) { // all other Explorers
        return {
          scrollTop: document.body.scrollTop,
          scrollLeft: document.body.scrollLeft
        };
      };
    };

    function _resize_overlay() {
      windowHeight = $(window).height(), windowWidth = $(window).width();

      //if(typeof $pp_overlay != "undefined") $pp_overlay.height($(document).height()).width(windowWidth);
    };

    function _insert_gallery() {
      if (isSet && settings.overlay_gallery && _getFileType(pp_images[set_position]) == "image") {
        itemWidth = 52 + 5; // 52 beign the thumb width, 5 being the right margin.
        navWidth = (settings.theme == "facebook" || settings.theme == "pp_default") ? 50 : 30; // Define the arrow width depending on the theme

        itemsPerPage = Math.floor((pp_dimensions['containerWidth'] - 100 - navWidth) / itemWidth);
        itemsPerPage = (itemsPerPage < pp_images.length) ? itemsPerPage : pp_images.length;
        totalPage = Math.ceil(pp_images.length / itemsPerPage) - 1;

        // Hide the nav in the case there's no need for links
        if (totalPage == 0) {
          navWidth = 0; // No nav means no width!
          $pp_gallery.find('.pp_arrow_next,.pp_arrow_previous').hide();
        } else {
          $pp_gallery.find('.pp_arrow_next,.pp_arrow_previous').show();
        };

        galleryWidth = itemsPerPage * itemWidth;
        fullGalleryWidth = pp_images.length * itemWidth;

        // Set the proper width to the gallery items
        $pp_gallery
          .css('margin-left', -((galleryWidth / 2) + (navWidth / 2)))
          .find('div:first').width(galleryWidth + 5)
          .find('ul').width(fullGalleryWidth)
          .find('li.selected').removeClass('selected');

        goToPage = (Math.floor(set_position / itemsPerPage) < totalPage) ? Math.floor(set_position / itemsPerPage) : totalPage;

        $.prettyPhoto.changeGalleryPage(goToPage);

        $pp_gallery_li.filter(':eq(' + set_position + ')').addClass('selected');

      } else {
        $pp_pic_holder.find('.pp_content').unbind('mouseenter mouseleave');
        // $pp_gallery.hide();
      }
    }

    function _build_overlay(caller) {
      // Inject Social Tool markup into General markup
      if (settings.social_tools)
        facebook_like_link = settings.social_tools.replace('{location_href}', encodeURIComponent(location.href));

      settings.markup = settings.markup.replace('{pp_social}', '');

      $('body').append(settings.markup); // Inject the markup

      $pp_pic_holder = $('.pp_pic_holder'), $ppt = $('.ppt'), $pp_overlay = $('div.pp_overlay'); // Set my global selectors

      // Inject the inline gallery!
      if (isSet && settings.overlay_gallery) {
        currentGalleryPage = 0;
        toInject = "";
        for (var i = 0; i < pp_images.length; i++) {
          if (!pp_images[i].match(/\b(jpg|jpeg|png|gif)\b/gi)) {
            classname = 'default';
            img_src = '';
          } else {
            classname = '';
            img_src = pp_images[i];
          }
          toInject += "<li class='" + classname + "'><a href='#'><img src='" + img_src + "' width='50' alt='' /></a></li>";
        };

        toInject = settings.gallery_markup.replace(/{gallery}/g, toInject);

        $pp_pic_holder.find('#pp_full_res').after(toInject);

        $pp_gallery = $('.pp_pic_holder .pp_gallery'), $pp_gallery_li = $pp_gallery.find('li'); // Set the gallery selectors

        $pp_gallery.find('.pp_arrow_next').click(function() {
          $.prettyPhoto.changeGalleryPage('next');
          $.prettyPhoto.stopSlideshow();
          return false;
        });

        $pp_gallery.find('.pp_arrow_previous').click(function() {
          $.prettyPhoto.changeGalleryPage('previous');
          $.prettyPhoto.stopSlideshow();
          return false;
        });

        $pp_pic_holder.find('.pp_content').hover(
          function() {
            $pp_pic_holder.find('.pp_gallery:not(.disabled)').fadeIn();
          },
          function() {
            $pp_pic_holder.find('.pp_gallery:not(.disabled)').fadeOut();
          });

        itemWidth = 52 + 5; // 52 beign the thumb width, 5 being the right margin.
        $pp_gallery_li.each(function(i) {
          $(this)
            .find('a')
            .click(function() {
              $.prettyPhoto.changePage(i);
              $.prettyPhoto.stopSlideshow();
              return false;
            });
        });
      };


      // Inject the play/pause if it's a slideshow
      if (settings.slideshow) {
        $pp_pic_holder.find('.pp_nav').prepend('<a href="#" class="pp_play">Play</a>')
        $pp_pic_holder.find('.pp_nav .pp_play').click(function() {
          $.prettyPhoto.startSlideshow();
          return false;
        });
      }

      $pp_pic_holder.attr('class', 'pp_pic_holder ' + settings.theme); // Set the proper theme

      $pp_overlay
        .css({
          'opacity': 0,
          //    'height':$(document).height(),
          //    'width':$(window).width()
        })
        .bind('click', function() {
          if (!settings.modal) $.prettyPhoto.close();
        });

      $('a.pp_close').bind('click', function() {
        $.prettyPhoto.close();
        return false;
      });


      if (settings.allow_expand) {
        $('a.pp_expand').bind('click', function(e) {
          // Expand the image
          if ($(this).hasClass('pp_expand')) {
            $(this).removeClass('pp_expand').addClass('pp_contract');
            doresize = false;
          } else {
            $(this).removeClass('pp_contract').addClass('pp_expand');
            doresize = true;
          };

          _hideContent(function() {
            $.prettyPhoto.open();
          });

          return false;
        });
      }

      $pp_pic_holder.find('.pp_previous, .pp_nav .pp_arrow_previous').bind('click', function() {
        $.prettyPhoto.changePage('previous');
        $.prettyPhoto.stopSlideshow();
        return false;
      });

      $pp_pic_holder.find('.pp_next, .pp_nav .pp_arrow_next').bind('click', function() {
        $.prettyPhoto.changePage('next');
        $.prettyPhoto.stopSlideshow();
        return false;
      });

      _center_overlay(); // Center it
    };

    if (!pp_alreadyInitialized && getHashtag()) {
      pp_alreadyInitialized = true;

      // Grab the rel index to trigger the click on the correct element
      hashIndex = getHashtag();
      hashRel = hashIndex;
      hashIndex = hashIndex.substring(hashIndex.indexOf('/') + 1, hashIndex.length - 1);
      hashRel = hashRel.substring(0, hashRel.indexOf('/'));

      // Little timeout to make sure all the prettyPhoto initialize scripts has been run.
      // Useful in the event the page contain several init scripts.
      setTimeout(function() {
        $("a[" + pp_settings.hook + "^='" + hashRel + "']:eq(" + hashIndex + ")").trigger('click');
      }, 50);
    }

    return this.unbind('click.prettyphoto').bind('click.prettyphoto', $.prettyPhoto.initialize); // Return the jQuery object for chaining. The unbind method is used to avoid click conflict when the plugin is called more than once
  };

  function getHashtag() {
    var url = location.href;
    hashtag = (url.indexOf('#prettyPhoto') !== -1) ? decodeURI(url.substring(url.indexOf('#prettyPhoto') + 1, url.length)) : false;

    return hashtag;
  };

  function setHashtag() {
    if (typeof theRel == 'undefined') return; // theRel is set on normal calls, it's impossible to deeplink using the API
    location.hash = theRel + '/' + rel_index + '/';
  };

  function clearHashtag() {
    if (location.href.indexOf('#prettyPhoto') !== -1) location.hash = "prettyPhoto";
  }

  function getParam(name, url) {
    name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
    var regexS = "[\\?&]" + name + "=([^&#]*)";
    var regex = new RegExp(regexS);
    var results = regex.exec(url);
    return (results == null) ? "" : results[1];
  }

})(jQuery);

var pp_alreadyInitialized = false; // Used for the deep linking to make sure not to call the same function several times.

/** jquery.lockfixed.min.js */
/*!
 * jQuery lockfixed plugin
 * http://www.directlyrics.com/code/lockfixed/
 *
 * Copyright 2012-2015 Yvo Schaap
 * Released under the MIT license
 * http://www.directlyrics.com/code/lockfixed/license.txt
 *
 * Date: Sun March 30 2015 12:00:01 GMT
 */
(function(e, p) {
  e.extend({
    lockfixed: function(a, b) {
      b && b.offset ? (b.offset.bottom = parseInt(b.offset.bottom, 10), b.offset.top = parseInt(b.offset.top, 10)) : b.offset = {
        bottom: 100,
        top: 0
      };
      if ((a = e(a)) && a.offset()) {
        var n = a.css("position"),
          c = parseInt(a.css("marginTop"), 10),
          l = a.css("top"),
          h = a.offset().top,
          f = !1;
        if (!0 === b.forcemargin || navigator.userAgent.match(/\bMSIE (4|5|6)\./) || navigator.userAgent.match(/\bOS ([0-9])_/) || navigator.userAgent.match(/\bAndroid ([0-9])\./i)) f = !0;
        a.wrap("<div style='height:" + a.outerHeight() +
          "px;display:" + a.css("display") + "'></div>");
        e(window).bind("DOMContentLoaded load scroll resize orientationchange lockfixed:pageupdate", a, function(k) {
          if (!f || !document.activeElement || "INPUT" !== document.activeElement.nodeName) {
            var d = 0,
              d = a.outerHeight();
            k = a.outerWidth();
            var m = e(document).height() - b.offset.bottom,
              g = e(window).scrollTop();
            "fixed" === a.css("position") || f || (h = a.offset().top, l = a.css("top"));
            g >= h - (c ? c : 0) - b.offset.top ? (d = m < g + d + c + b.offset.top ? g + d + c + b.offset.top - m : 0, f ? a.css({
              marginTop: parseInt(g -
                h - d, 10) + 2 * b.offset.top + "px"
            }) : a.css({
              position: "fixed",
              top: b.offset.top - d + "px",
              width: k + "px"
            })) : a.css({
              position: n,
              top: l,
              width: k + "px",
              marginTop: (c && !f ? c : 0) + "px"
            })
          }
        })
      }
    }
  })
})(jQuery);

/** jquery.inputmask.min.js */
/*!
 * jquery.inputmask.min.js
 * http://github.com/RobinHerbots/jquery.inputmask
 * Copyright (c) 2010 - 2015 Robin Herbots
 * Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
 * Version: 3.1.62
 */
! function(a) {
  "function" == typeof define && define.amd ? define(["jquery"], a) : a(jQuery)
}(function(a) {
  function b(a) {
    var b = document.createElement("input"),
      c = "on" + a,
      d = c in b;
    return d || (b.setAttribute(c, "return;"), d = "function" == typeof b[c]), b = null, d
  }

  function c(a) {
    var b = "text" == a || "tel" == a;
    if (!b) {
      var c = document.createElement("input");
      c.setAttribute("type", a), b = "text" === c.type, c = null
    }
    return b
  }

  function d(b, c, e) {
    var f = e.aliases[b];
    return f ? (f.alias && d(f.alias, void 0, e), a.extend(!0, e, f), a.extend(!0, e, c), !0) : !1
  }

  function e(b, c) {
    function d(c) {
      function d(a, b, c, d) {
        this.matches = [], this.isGroup = a || !1, this.isOptional = b || !1, this.isQuantifier = c || !1, this.isAlternator = d || !1, this.quantifier = {
          min: 1,
          max: 1
        }
      }

      function e(c, d, e) {
        var f = b.definitions[d],
          g = 0 == c.matches.length;
        if (e = void 0 != e ? e : c.matches.length, f && !m) {
          f.placeholder = a.isFunction(f.placeholder) ? f.placeholder.call(this, b) : f.placeholder;
          for (var h = f.prevalidator, i = h ? h.length : 0, j = 1; j < f.cardinality; j++) {
            var k = i >= j ? h[j - 1] : [],
              l = k.validator,
              n = k.cardinality;
            c.matches.splice(e++, 0, {
              fn: l ? "string" == typeof l ? new RegExp(l) : new function() {
                this.test = l
              } : new RegExp("."),
              cardinality: n ? n : 1,
              optionality: c.isOptional,
              newBlockMarker: g,
              casing: f.casing,
              def: f.definitionSymbol || d,
              placeholder: f.placeholder,
              mask: d
            })
          }
          c.matches.splice(e++, 0, {
            fn: f.validator ? "string" == typeof f.validator ? new RegExp(f.validator) : new function() {
              this.test = f.validator
            } : new RegExp("."),
            cardinality: f.cardinality,
            optionality: c.isOptional,
            newBlockMarker: g,
            casing: f.casing,
            def: f.definitionSymbol || d,
            placeholder: f.placeholder,
            mask: d
          })
        } else c.matches.splice(e++, 0, {
          fn: null,
          cardinality: 0,
          optionality: c.isOptional,
          newBlockMarker: g,
          casing: null,
          def: d,
          placeholder: void 0,
          mask: d
        }), m = !1
      }
      for (var f, g, h, i, j, k, l = /(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?\})\??|[^.?*+^${[]()|\\]+|./g, m = !1, n = new d, o = [], p = []; f = l.exec(c);) switch (g = f[0], g.charAt(0)) {
        case b.optionalmarker.end:
        case b.groupmarker.end:
          if (h = o.pop(), o.length > 0) {
            if (i = o[o.length - 1], i.matches.push(h), i.isAlternator) {
              j = o.pop();
              for (var q = 0; q < j.matches.length; q++) j.matches[q].isGroup = !1;
              o.length > 0 ? (i = o[o.length - 1], i.matches.push(j)) : n.matches.push(j)
            }
          } else n.matches.push(h);
          break;
        case b.optionalmarker.start:
          o.push(new d(!1, !0));
          break;
        case b.groupmarker.start:
          o.push(new d(!0));
          break;
        case b.quantifiermarker.start:
          var r = new d(!1, !1, !0);
          g = g.replace(/[{}]/g, "");
          var s = g.split(","),
            t = isNaN(s[0]) ? s[0] : parseInt(s[0]),
            u = 1 == s.length ? t : isNaN(s[1]) ? s[1] : parseInt(s[1]);
          if (("*" == u || "+" == u) && (t = "*" == u ? 0 : 1), r.quantifier = {
              min: t,
              max: u
            }, o.length > 0) {
            var v = o[o.length - 1].matches;
            if (f = v.pop(), !f.isGroup) {
              var w = new d(!0);
              w.matches.push(f), f = w
            }
            v.push(f), v.push(r)
          } else {
            if (f = n.matches.pop(), !f.isGroup) {
              var w = new d(!0);
              w.matches.push(f), f = w
            }
            n.matches.push(f), n.matches.push(r)
          }
          break;
        case b.escapeChar:
          m = !0;
          break;
        case b.alternatormarker:
          o.length > 0 ? (i = o[o.length - 1], k = i.matches.pop()) : k = n.matches.pop(), k.isAlternator ? o.push(k) : (j = new d(!1, !1, !1, !0), j.matches.push(k), o.push(j));
          break;
        default:
          if (o.length > 0) {
            if (i = o[o.length - 1], i.matches.length > 0 && !i.isAlternator && (k = i.matches[i.matches.length - 1], k.isGroup && (k.isGroup = !1, e(k, b.groupmarker.start, 0), e(k, b.groupmarker.end))), e(i, g), i.isAlternator) {
              j = o.pop();
              for (var q = 0; q < j.matches.length; q++) j.matches[q].isGroup = !1;
              o.length > 0 ? (i = o[o.length - 1], i.matches.push(j)) : n.matches.push(j)
            }
          } else n.matches.length > 0 && (k = n.matches[n.matches.length - 1], k.isGroup && (k.isGroup = !1, e(k, b.groupmarker.start, 0), e(k, b.groupmarker.end))), e(n, g)
      }
      return n.matches.length > 0 && (k = n.matches[n.matches.length - 1], k.isGroup && (k.isGroup = !1, e(k, b.groupmarker.start, 0), e(k, b.groupmarker.end)), p.push(n)), p
    }

    function e(e, f) {
      if (void 0 == e || "" == e) return void 0;
      if (1 == e.length && 0 == b.greedy && 0 != b.repeat && (b.placeholder = ""), b.repeat > 0 || "*" == b.repeat || "+" == b.repeat) {
        var g = "*" == b.repeat ? 0 : "+" == b.repeat ? 1 : b.repeat;
        e = b.groupmarker.start + e + b.groupmarker.end + b.quantifiermarker.start + g + "," + b.repeat + b.quantifiermarker.end
      }
      var h;
      return void 0 == a.inputmask.masksCache[e] || c === !0 ? (h = {
        mask: e,
        maskToken: d(e),
        validPositions: {},
        _buffer: void 0,
        buffer: void 0,
        tests: {},
        metadata: f
      }, c !== !0 && (a.inputmask.masksCache[e] = h)) : h = a.extend(!0, {}, a.inputmask.masksCache[e]), h
    }

    function f(a) {
      if (a = a.toString(), b.numericInput) {
        a = a.split("").reverse();
        for (var c = 0; c < a.length; c++) a[c] == b.optionalmarker.start ? a[c] = b.optionalmarker.end : a[c] == b.optionalmarker.end ? a[c] = b.optionalmarker.start : a[c] == b.groupmarker.start ? a[c] = b.groupmarker.end : a[c] == b.groupmarker.end && (a[c] = b.groupmarker.start);
        a = a.join("")
      }
      return a
    }
    var g = void 0;
    if (a.isFunction(b.mask) && (b.mask = b.mask.call(this, b)), a.isArray(b.mask)) {
      if (b.mask.length > 1) {
        b.keepStatic = void 0 == b.keepStatic ? !0 : b.keepStatic;
        var h = "(";
        return a.each(b.mask, function(b, c) {
          h.length > 1 && (h += ")|("), h += f(void 0 == c.mask || a.isFunction(c.mask) ? c : c.mask)
        }), h += ")", e(h, b.mask)
      }
      b.mask = b.mask.pop()
    }
    return b.mask && (g = void 0 == b.mask.mask || a.isFunction(b.mask.mask) ? e(f(b.mask), b.mask) : e(f(b.mask.mask), b.mask)), g
  }

  function f(d, e, f) {
    function g(a, b, c) {
      b = b || 0;
      var d, e, f, g = [],
        h = 0;
      do {
        if (a === !0 && l().validPositions[h]) {
          var i = l().validPositions[h];
          e = i.match, d = i.locator.slice(), g.push(c === !0 ? i.input : G(h, e))
        } else f = q(h, d, h - 1), e = f.match, d = f.locator.slice(), g.push(G(h, e));
        h++
      } while ((void 0 == da || da > h - 1) && null != e.fn || null == e.fn && "" != e.def || b >= h);
      return g.pop(), g
    }

    function l() {
      return e
    }

    function m(a) {
      var b = l();
      b.buffer = void 0, b.tests = {}, a !== !0 && (b._buffer = void 0, b.validPositions = {}, b.p = 0)
    }

    function n(a, b) {
      var c = l(),
        d = -1,
        e = c.validPositions;
      void 0 == a && (a = -1);
      var f = d,
        g = d;
      for (var h in e) {
        var i = parseInt(h);
        e[i] && (b || null != e[i].match.fn) && (a >= i && (f = i), i >= a && (g = i))
      }
      return d = -1 != f && a - f > 1 || a > g ? f : g
    }

    function o(b, c, d) {
      if (f.insertMode && void 0 != l().validPositions[b] && void 0 == d) {
        var e, g = a.extend(!0, {}, l().validPositions),
          h = n();
        for (e = b; h >= e; e++) delete l().validPositions[e];
        l().validPositions[b] = c;
        var i, j = !0,
          k = l().validPositions;
        for (e = i = b; h >= e; e++) {
          var m = g[e];
          if (void 0 != m)
            for (var o = i; o < B() && (null == m.match.fn && k[e] && (k[e].match.optionalQuantifier === !0 || k[e].match.optionality === !0) || null != m.match.fn);) {
              if (null == m.match.fn || !f.keepStatic && k[e] && (void 0 != k[e + 1] && t(e + 1, k[e].locator.slice(), e).length > 1 || void 0 != k[e].alternation) ? o++ : o = C(i), s(o, m.match.def)) {
                j = z(o, m.input, !0, !0) !== !1, i = o;
                break
              }
              j = null == m.match.fn
            }
          if (!j) break
        }
        if (!j) return l().validPositions = a.extend(!0, {}, g), !1
      } else l().validPositions[b] = c;
      return !0
    }

    function p(a, b, c, d) {
      var e, g = a;
      l().p = a, void 0 != l().validPositions[a] && l().validPositions[a].input == f.radixPoint && (b++, g++);
      for (e = g; b > e; e++) void 0 != l().validPositions[e] && (c === !0 || 0 != f.canClearPosition(l(), e, n(), d, f)) && delete l().validPositions[e];
      for (m(!0), e = g + 1; e <= n();) {
        for (; void 0 != l().validPositions[g];) g++;
        var h = l().validPositions[g];
        g > e && (e = g + 1);
        var i = l().validPositions[e];
        void 0 != i && void 0 == h ? (s(g, i.match.def) && z(g, i.input, !0) !== !1 && (delete l().validPositions[e], e++), g++) : e++
      }
      var j = n(),
        k = B();
      for (j >= a && void 0 != l().validPositions[j] && l().validPositions[j].input == f.radixPoint && delete l().validPositions[j], e = j + 1; k >= e; e++) l().validPositions[e] && delete l().validPositions[e];
      m(!0)
    }

    function q(a, b, c) {
      var d = l().validPositions[a];
      if (void 0 == d)
        for (var e = t(a, b, c), g = n(), h = l().validPositions[g] || t(0, void 0, void 0)[0], i = void 0 != h.alternation ? h.locator[h.alternation].toString().split(",") : [], j = 0; j < e.length && (d = e[j], !(d.match && (f.greedy && d.match.optionalQuantifier !== !0 || (d.match.optionality === !1 || d.match.newBlockMarker === !1) && d.match.optionalQuantifier !== !0) && (void 0 == h.alternation || void 0 != d.locator[h.alternation] && y(d.locator[h.alternation].toString().split(","), i)))); j++);
      return d
    }

    function r(a) {
      return l().validPositions[a] ? l().validPositions[a].match : t(a)[0].match
    }

    function s(a, b) {
      for (var c = !1, d = t(a), e = 0; e < d.length; e++)
        if (d[e].match && d[e].match.def == b) {
          c = !0;
          break
        }
      return c
    }

    function t(b, c, d, e) {
      function f(c, d, e, g) {
        function i(e, g, n) {
          if (h > 1e4) return alert("jquery.inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. " + l().mask), !0;
          if (h == b && void 0 == e.matches) return j.push({
            match: e,
            locator: g.reverse()
          }), !0;
          if (void 0 != e.matches) {
            if (e.isGroup && n !== !0) {
              if (e = i(c.matches[m + 1], g)) return !0
            } else if (e.isOptional) {
              var o = e;
              if (e = f(e, d, g, n)) {
                var p = j[j.length - 1].match,
                  q = 0 == a.inArray(p, o.matches);
                if (!q) return !0;
                k = !0, h = b
              }
            } else if (e.isAlternator) {
              var r, s = e,
                t = [],
                u = j.slice(),
                v = g.length,
                w = d.length > 0 ? d.shift() : -1;
              if (-1 == w || "string" == typeof w) {
                var x, y = h,
                  z = d.slice();
                "string" == typeof w && (x = w.split(","));
                for (var A = 0; A < s.matches.length; A++) {
                  j = [], e = i(s.matches[A], [A].concat(g), n) || e, r = j.slice(), h = y, j = [];
                  for (var B = 0; B < z.length; B++) d[B] = z[B];
                  for (var C = 0; C < r.length; C++) {
                    var D = r[C];
                    D.alternation = v;
                    for (var E = 0; E < t.length; E++) {
                      var F = t[E];
                      if (D.match.mask == F.match.mask && ("string" != typeof w || -1 != a.inArray(D.locator[v].toString(), x))) {
                        r.splice(C, 1), F.locator[v] = F.locator[v] + "," + D.locator[v], F.alternation = v;
                        break
                      }
                    }
                  }
                  t = t.concat(r)
                }
                "string" == typeof w && (t = a.map(t, function(b, c) {
                  if (isFinite(c)) {
                    var d, e = b.locator[v].toString().split(",");
                    b.locator[v] = void 0, b.alternation = void 0;
                    for (var f = 0; f < e.length; f++) d = -1 != a.inArray(e[f], x), d && (void 0 != b.locator[v] ? (b.locator[v] += ",", b.locator[v] += e[f]) : b.locator[v] = parseInt(e[f]), b.alternation = v);
                    if (void 0 != b.locator[v]) return b
                  }
                })), j = u.concat(t), h = b, k = !0
              } else e = i(s.matches[w], [w].concat(g), n);
              if (e) return !0
            } else if (e.isQuantifier && n !== !0)
              for (var G = e, H = d.length > 0 && n !== !0 ? d.shift() : 0; H < (isNaN(G.quantifier.max) ? H + 1 : G.quantifier.max) && b >= h; H++) {
                var I = c.matches[a.inArray(G, c.matches) - 1];
                if (e = i(I, [H].concat(g), !0)) {
                  var p = j[j.length - 1].match;
                  p.optionalQuantifier = H > G.quantifier.min - 1;
                  var q = 0 == a.inArray(p, I.matches);
                  if (q) {
                    if (H > G.quantifier.min - 1) {
                      k = !0, h = b;
                      break
                    }
                    return !0
                  }
                  return !0
                }
              } else if (e = f(e, d, g, n)) return !0
          } else h++
        }
        for (var m = d.length > 0 ? d.shift() : 0; m < c.matches.length; m++)
          if (c.matches[m].isQuantifier !== !0) {
            var n = i(c.matches[m], [m].concat(e), g);
            if (n && h == b) return n;
            if (h > b) break
          }
      }
      var g = l().maskToken,
        h = c ? d : 0,
        i = c || [0],
        j = [],
        k = !1;
      if (void 0 == c) {
        for (var m, n = b - 1; void 0 == (m = l().validPositions[n]) && n > -1;) n--;
        if (void 0 != m && n > -1) h = n, i = m.locator.slice();
        else {
          for (n = b - 1; void 0 == (m = l().tests[n]) && n > -1;) n--;
          void 0 != m && n > -1 && (h = n, i = m[0].locator.slice())
        }
      }
      for (var o = i.shift(); o < g.length; o++) {
        var p = f(g[o], i, [o]);
        if (p && h == b || h > b) break
      }
      return (0 == j.length || k) && j.push({
        match: {
          fn: null,
          cardinality: 0,
          optionality: !0,
          casing: null,
          def: ""
        },
        locator: []
      }), l().tests[b] = a.extend(!0, [], j), l().tests[b]
    }

    function u() {
      return void 0 == l()._buffer && (l()._buffer = g(!1, 1)), l()._buffer
    }

    function v() {
      return void 0 == l().buffer && (l().buffer = g(!0, n(), !0)), l().buffer
    }

    function w(a, b, c) {
      if (c = c || v().slice(), a === !0) m(), a = 0, b = c.length;
      else
        for (var d = a; b > d; d++) delete l().validPositions[d], delete l().tests[d];
      for (var d = a; b > d; d++) c[d] != f.skipOptionalPartCharacter && z(d, c[d], !0, !0)
    }

    function x(a, b) {
      switch (b.casing) {
        case "upper":
          a = a.toUpperCase();
          break;
        case "lower":
          a = a.toLowerCase()
      }
      return a
    }

    function y(b, c) {
      for (var d = f.greedy ? c : c.slice(0, 1), e = !1, g = 0; g < b.length; g++)
        if (-1 != a.inArray(b[g], d)) {
          e = !0;
          break
        }
      return e
    }

    function z(b, c, d, e) {
      function g(b, c, d, e) {
        var g = !1;
        return a.each(t(b), function(h, i) {
          for (var j = i.match, k = c ? 1 : 0, q = "", r = (v(), j.cardinality); r > k; r--) q += E(b - (r - 1));
          if (c && (q += c), g = null != j.fn ? j.fn.test(q, l(), b, d, f) : c != j.def && c != f.skipOptionalPartCharacter || "" == j.def ? !1 : {
              c: j.def,
              pos: b
            }, g !== !1) {
            var s = void 0 != g.c ? g.c : c;
            s = s == f.skipOptionalPartCharacter && null === j.fn ? j.def : s;
            var t = b,
              u = v();
            if (void 0 != g.remove && (a.isArray(g.remove) || (g.remove = [g.remove]), a.each(g.remove.sort(function(a, b) {
                return b - a
              }), function(a, b) {
                p(b, b + 1, !0)
              })), void 0 != g.insert && (a.isArray(g.insert) || (g.insert = [g.insert]), a.each(g.insert.sort(function(a, b) {
                return a - b
              }), function(a, b) {
                z(b.pos, b.c, !0)
              })), g.refreshFromBuffer) {
              var y = g.refreshFromBuffer;
              if (d = !0, w(y === !0 ? y : y.start, y.end, u), void 0 == g.pos && void 0 == g.c) return g.pos = n(), !1;
              if (t = void 0 != g.pos ? g.pos : b, t != b) return g = a.extend(g, z(t, s, !0)), !1
            } else if (g !== !0 && void 0 != g.pos && g.pos != b && (t = g.pos, w(b, t), t != b)) return g = a.extend(g, z(t, s, !0)), !1;
            return 1 != g && void 0 == g.pos && void 0 == g.c ? !1 : (h > 0 && m(!0), o(t, a.extend({}, i, {
              input: x(s, j)
            }), e) || (g = !1), !1)
          }
        }), g
      }

      function h(b, c, d, e) {
        var g, h, i, j, k = a.extend(!0, {}, l().validPositions);
        for (g = n(); g >= 0; g--)
          if (j = l().validPositions[g], j && void 0 != j.alternation && j.locator[j.alternation].length > 1) {
            h = l().validPositions[g].alternation;
            break
          }
        if (void 0 != h)
          for (var o in l().validPositions)
            if (j = l().validPositions[o], parseInt(o) > parseInt(g) && j.alternation) {
              for (var p = j.locator[h], q = l().validPositions[g].locator[h].toString().split(","), r = 0; r < q.length; r++)
                if (p < q[r]) {
                  for (var s, t, u = o - 1; u >= 0; u--)
                    if (s = l().validPositions[u], void 0 != s) {
                      t = s.locator[h], s.locator[h] = parseInt(q[r]);
                      break
                    }
                  if (p != s.locator[h]) {
                    for (var v = [], w = o; w < n() + 1; w++) {
                      var x = l().validPositions[w];
                      x && null != x.match.fn && v.push(x.input), delete l().validPositions[w], delete l().tests[w]
                    }
                    for (m(!0), f.keepStatic = !f.keepStatic, i = !0; v.length > 0;) {
                      var y = v.shift();
                      if (y != f.skipOptionalPartCharacter && !(i = z(n() + 1, y, !1, !0))) break
                    }
                    if (s.alternation = h, s.locator[h] = t, i && (i = z(b, c, d, e)), f.keepStatic = !f.keepStatic, i) return i;
                    m(), l().validPositions = a.extend(!0, {}, k)
                  }
                }
              break
            }
        return !1
      }

      function i(b, c) {
        for (var d = l().validPositions[c], e = d.locator, f = e.length, g = b; c > g; g++)
          if (!A(g)) {
            var h = t(g),
              i = h[0],
              j = -1;
            a.each(h, function(a, b) {
              for (var c = 0; f > c; c++) b.locator[c] && y(b.locator[c].toString().split(","), e[c].toString().split(",")) && c > j && (j = c, i = b)
            }), o(g, a.extend({}, i, {
              input: i.match.def
            }), !0)
          }
      }
      d = d === !0;
      for (var j = v(), k = b - 1; k > -1 && !l().validPositions[k]; k--);
      for (k++; b > k; k++) void 0 == l().validPositions[k] && ((!A(k) || j[k] != G(k)) && t(k).length > 1 || j[k] == f.radixPoint || "0" == j[k] && a.inArray(f.radixPoint, j) < k) && g(k, j[k], !0);
      var q = b,
        r = !1,
        s = a.extend(!0, {}, l().validPositions);
      if (q < B() && (r = g(q, c, d, e), (!d || e) && r === !1)) {
        var u = l().validPositions[q];
        if (!u || null != u.match.fn || u.match.def != c && c != f.skipOptionalPartCharacter) {
          if ((f.insertMode || void 0 == l().validPositions[C(q)]) && !A(q))
            for (var D = q + 1, F = C(q); F >= D; D++)
              if (r = g(D, c, d, e), r !== !1) {
                i(q, D), q = D;
                break
              }
        } else r = {
          caret: C(q)
        }
      }
      if (r === !1 && f.keepStatic && O(j) && (r = h(b, c, d, e)), r === !0 && (r = {
          pos: q
        }), a.isFunction(f.postValidation) && 0 != r && !d) {
        m(!0);
        var H = f.postValidation(v(), f);
        if (!H) return m(!0), l().validPositions = a.extend(!0, {}, s), !1
      }
      return r
    }

    function A(a) {
      var b = r(a);
      if (null != b.fn) return b.fn;
      if (!f.keepStatic && void 0 == l().validPositions[a]) {
        for (var c = t(a), d = !0, e = 0; e < c.length; e++)
          if ("" != c[e].match.def && (null !== c[e].match.fn || void 0 == c[e].alternation || c[e].locator[c[e].alternation].length > 1)) {
            d = !1;
            break
          }
        return d
      }
      return !1
    }

    function B() {
      var a;
      da = ca.prop("maxLength"), -1 == da && (da = void 0);
      var b, c = n(),
        d = l().validPositions[c],
        e = void 0 != d ? d.locator.slice() : void 0;
      for (b = c + 1; void 0 == d || null != d.match.fn || null == d.match.fn && "" != d.match.def; b++) d = q(b, e, b - 1), e = d.locator.slice();
      var f = r(b - 1);
      return a = "" != f.def ? b : b - 1, void 0 == da || da > a ? a : da
    }

    function C(a) {
      var b = B();
      if (a >= b) return b;
      for (var c = a; ++c < b && !A(c) && (f.nojumps !== !0 || f.nojumpsThreshold > c););
      return c
    }

    function D(a) {
      var b = a;
      if (0 >= b) return 0;
      for (; --b > 0 && !A(b););
      return b
    }

    function E(a) {
      return void 0 == l().validPositions[a] ? G(a) : l().validPositions[a].input
    }

    function F(b, c, d, e, g) {
      if (e && a.isFunction(f.onBeforeWrite)) {
        var h = f.onBeforeWrite.call(b, e, c, d, f);
        if (h) {
          if (h.refreshFromBuffer) {
            var i = h.refreshFromBuffer;
            w(i === !0 ? i : i.start, i.end, h.buffer), m(!0), c = v()
          }
          d = h.caret || d
        }
      }
      b._valueSet(c.join("")), void 0 != d && L(b, d), g === !0 && (ga = !0, a(b).trigger("input"))
    }

    function G(a, b) {
      if (b = b || r(a), void 0 != b.placeholder) return b.placeholder;
      if (null == b.fn) {
        if (!f.keepStatic && void 0 == l().validPositions[a]) {
          for (var c = t(a), d = !0, e = 0; e < c.length; e++)
            if ("" != c[e].match.def && (null !== c[e].match.fn || void 0 == c[e].alternation || c[e].locator[c[e].alternation].length > 1)) {
              d = !1;
              break
            }
          if (d) return f.placeholder.charAt(a % f.placeholder.length)
        }
        return b.def
      }
      return f.placeholder.charAt(a % f.placeholder.length)
    }

    function H(b, c, d, e) {
      function f() {
        var a = !1,
          b = u().slice(i, C(i)).join("").indexOf(h);
        if (-1 != b && !A(i)) {
          a = !0;
          for (var c = u().slice(i, i + b), d = 0; d < c.length; d++)
            if (" " != c[d]) {
              a = !1;
              break
            }
        }
        return a
      }
      var g = void 0 != e ? e.slice() : b._valueGet().split(""),
        h = "",
        i = 0;
      if (m(), l().p = C(-1), c && b._valueSet(""), !d) {
        var j = u().slice(0, C(-1)).join(""),
          k = g.join("").match(new RegExp(I(j), "g"));
        k && k.length > 0 && (g.splice(0, k.length * j.length), i = C(i))
      }
      a.each(g, function(c, e) {
        var g = a.Event("keypress");
        g.which = e.charCodeAt(0), h += e;
        var j = n(void 0, !0),
          k = l().validPositions[j],
          m = q(j + 1, k ? k.locator.slice() : void 0, j);
        if (!f() || d) {
          var o = d ? c : null == m.match.fn && m.match.optionality && j + 1 < l().p ? j + 1 : l().p;
          U.call(b, g, !0, !1, d, o), i = o + 1, h = ""
        } else U.call(b, g, !0, !1, !0, j + 1)
      }), c && F(b, v(), a(b).is(":focus") ? C(n(0)) : void 0, a.Event("checkval"))
    }

    function I(b) {
      return a.inputmask.escapeRegex(b)
    }

    function J(b) {
      if (b.data("_inputmask") && !b.hasClass("hasDatepicker")) {
        var c = [],
          d = l().validPositions;
        for (var e in d) d[e].match && null != d[e].match.fn && c.push(d[e].input);
        var g = (ea ? c.reverse() : c).join(""),
          h = (ea ? v().slice().reverse() : v()).join("");
        return a.isFunction(f.onUnMask) && (g = f.onUnMask.call(b, h, g, f) || g), g
      }
      return b[0]._valueGet()
    }

    function K(a) {
      if (ea && "number" == typeof a && (!f.greedy || "" != f.placeholder)) {
        var b = v().length;
        a = b - a
      }
      return a
    }

    function L(b, c, d) {
      var e, g = b.jquery && b.length > 0 ? b[0] : b;
      if ("number" != typeof c) return g.setSelectionRange ? (c = g.selectionStart, d = g.selectionEnd) : window.getSelection ? (e = window.getSelection().getRangeAt(0), e.commonAncestorContainer.parentNode == g && (c = e.startOffset, d = e.endOffset)) : document.selection && document.selection.createRange && (e = document.selection.createRange(), c = 0 - e.duplicate().moveStart("character", -1e5), d = c + e.text.length), {
        begin: K(c),
        end: K(d)
      };
      if (c = K(c), d = K(d), d = "number" == typeof d ? d : c, a(g).is(":visible")) {
        var h = a(g).css("font-size").replace("px", "") * d;
        if (g.scrollLeft = h > g.scrollWidth ? h : 0, i || 0 != f.insertMode || c != d || d++, g.setSelectionRange) g.selectionStart = c, g.selectionEnd = d;
        else if (window.getSelection) {
          e = document.createRange(), e.setStart(g.firstChild, c < g._valueGet().length ? c : g._valueGet().length), e.setEnd(g.firstChild, d < g._valueGet().length ? d : g._valueGet().length), e.collapse(!0);
          var j = window.getSelection();
          j.removeAllRanges(), j.addRange(e)
        } else g.createTextRange && (e = g.createTextRange(), e.collapse(!0), e.moveEnd("character", d), e.moveStart("character", c), e.select())
      }
    }

    function M(b) {
      var c, d, e = v(),
        f = e.length,
        g = n(),
        h = {},
        i = l().validPositions[g],
        j = void 0 != i ? i.locator.slice() : void 0;
      for (c = g + 1; c < e.length; c++) d = q(c, j, c - 1), j = d.locator.slice(), h[c] = a.extend(!0, {}, d);
      var k = i && void 0 != i.alternation ? i.locator[i.alternation] : void 0;
      for (c = f - 1; c > g && (d = h[c].match, (d.optionality || d.optionalQuantifier || k && k != h[c].locator[i.alternation]) && e[c] == G(c, d)); c--) f--;
      return b ? {
        l: f,
        def: h[f] ? h[f].match : void 0
      } : f
    }

    function N(a) {
      for (var b = M(), c = a.length - 1; c > b && !A(c); c--);
      return a.splice(b, c + 1 - b), a
    }

    function O(b) {
      if (a.isFunction(f.isComplete)) return f.isComplete.call(ca, b, f);
      if ("*" == f.repeat) return void 0; {
        var c = !1,
          d = M(!0),
          e = D(d.l);
        n()
      }
      if (void 0 == d.def || d.def.newBlockMarker || d.def.optionality || d.def.optionalQuantifier) {
        c = !0;
        for (var g = 0; e >= g; g++) {
          var h = A(g),
            i = r(g);
          if (h && void 0 == l().validPositions[g] && i.optionality !== !0 && i.optionalQuantifier !== !0 || !h && b[g] != G(g)) {
            c = !1;
            break
          }
        }
      }
      return c
    }

    function P(a, b) {
      return ea ? a - b > 1 || a - b == 1 && f.insertMode : b - a > 1 || b - a == 1 && f.insertMode
    }

    function Q(b) {
      var c = a._data(b).events,
        d = !1;
      a.each(c, function(b, c) {
        a.each(c, function(a, b) {
          if ("inputmask" == b.namespace && "setvalue" != b.type) {
            var c = b.handler;
            b.handler = function(a) {
              if (!this.disabled && (!this.readOnly || "keydown" == a.type && a.ctrlKey && 67 == a.keyCode)) {
                switch (a.type) {
                  case "input":
                    if (ga === !0 || d === !0) return ga = !1, a.preventDefault();
                    break;
                  case "keydown":
                    fa = !1, d = !1;
                    break;
                  case "keypress":
                    if (fa === !0) return a.preventDefault();
                    fa = !0;
                    break;
                  case "compositionstart":
                    d = !0;
                    break;
                  case "compositionupdate":
                    ga = !0;
                    break;
                  case "compositionend":
                    d = !1
                }
                return c.apply(this, arguments)
              }
              a.preventDefault()
            }
          }
        })
      })
    }

    function R(b) {
      function c(b) {
        if (void 0 == a.valHooks[b] || 1 != a.valHooks[b].inputmaskpatch) {
          var c = a.valHooks[b] && a.valHooks[b].get ? a.valHooks[b].get : function(a) {
              return a.value
            },
            d = a.valHooks[b] && a.valHooks[b].set ? a.valHooks[b].set : function(a, b) {
              return a.value = b, a
            };
          a.valHooks[b] = {
            get: function(b) {
              var d = a(b);
              if (d.data("_inputmask")) {
                if (d.data("_inputmask").opts.autoUnmask) return d.inputmask("unmaskedvalue");
                var e = c(b),
                  f = d.data("_inputmask"),
                  g = f.maskset,
                  h = g._buffer;
                return h = h ? h.join("") : "", e != h ? e : ""
              }
              return c(b)
            },
            set: function(b, c) {
              var e, f = a(b),
                g = f.data("_inputmask");
              return e = d(b, c), g && f.triggerHandler("setvalue.inputmask"), e
            },
            inputmaskpatch: !0
          }
        }
      }

      function d() {
        var b = a(this),
          c = a(this).data("_inputmask");
        return c ? c.opts.autoUnmask ? b.inputmask("unmaskedvalue") : g.call(this) != u().join("") ? g.call(this) : "" : g.call(this)
      }

      function e(b) {
        var c = a(this).data("_inputmask");
        h.call(this, b), c && a(this).triggerHandler("setvalue.inputmask")
      }

      function f(b) {
        a(b).bind("mouseenter.inputmask", function() {
          var b = a(this),
            c = this,
            d = c._valueGet();
          "" != d && d != v().join("") && b.triggerHandler("setvalue.inputmask")
        });
        //!! the bound handlers are executed in the order they where bound
        var c = a._data(b).events,
          d = c.mouseover;
        if (d) {
          for (var e = d[d.length - 1], f = d.length - 1; f > 0; f--) d[f] = d[f - 1];
          d[0] = e
        }
      }
      var g, h;
      if (!b._valueGet) {
        var i;
        Object.getOwnPropertyDescriptor && void 0 == b.value ? (g = function() {
          return this.textContent
        }, h = function(a) {
          this.textContent = a
        }, Object.defineProperty(b, "value", {
          get: d,
          set: e
        })) : ((i = Object.getOwnPropertyDescriptor && Object.getOwnPropertyDescriptor(b, "value")) && i.configurable, document.__lookupGetter__ && b.__lookupGetter__("value") ? (g = b.__lookupGetter__("value"), h = b.__lookupSetter__("value"), b.__defineGetter__("value", d), b.__defineSetter__("value", e)) : (g = function() {
          return b.value
        }, h = function(a) {
          b.value = a
        }, c(b.type), f(b))), b._valueGet = function(a) {
          return ea && a !== !0 ? g.call(this).split("").reverse().join("") : g.call(this)
        }, b._valueSet = function(a) {
          h.call(this, ea ? a.split("").reverse().join("") : a)
        }
      }
    }

    function S(b, c, d, e) {
      function g() {
        if (f.keepStatic) {
          m(!0);
          var c, d = [],
            e = a.extend(!0, {}, l().validPositions);
          for (c = n(); c >= 0; c--) {
            var g = l().validPositions[c];
            if (g) {
              if (void 0 != g.alternation && g.locator[g.alternation] == q(c).locator[g.alternation]) break;
              null != g.match.fn && d.push(g.input), delete l().validPositions[c]
            }
          }
          if (c > 0)
            for (; d.length > 0;) {
              l().p = C(n());
              var h = a.Event("keypress");
              h.which = d.pop().charCodeAt(0), U.call(b, h, !0, !1, !1, l().p)
            } else l().validPositions = a.extend(!0, {}, e)
        }
      }
      if ((f.numericInput || ea) && (c == a.inputmask.keyCode.BACKSPACE ? c = a.inputmask.keyCode.DELETE : c == a.inputmask.keyCode.DELETE && (c = a.inputmask.keyCode.BACKSPACE), ea)) {
        var h = d.end;
        d.end = d.begin, d.begin = h
      }
      if (c == a.inputmask.keyCode.BACKSPACE && (d.end - d.begin < 1 || 0 == f.insertMode) ? d.begin = D(d.begin) : c == a.inputmask.keyCode.DELETE && d.begin == d.end && (d.end = A(d.end) ? d.end + 1 : C(d.end) + 1), p(d.begin, d.end, !1, e), e !== !0) {
        g();
        var i = n(d.begin);
        i < d.begin ? (-1 == i && m(), l().p = C(i)) : l().p = d.begin
      }
    }

    function T(c) {
      var d = this,
        e = a(d),
        g = c.keyCode,
        i = L(d);
      g == a.inputmask.keyCode.BACKSPACE || g == a.inputmask.keyCode.DELETE || h && 127 == g || c.ctrlKey && 88 == g && !b("cut") ? (c.preventDefault(), 88 == g && (_ = v().join("")), S(d, g, i), F(d, v(), l().p, c, _ != v().join("")), d._valueGet() == u().join("") ? e.trigger("cleared") : O(v()) === !0 && e.trigger("complete"), f.showTooltip && e.prop("title", l().mask)) : g == a.inputmask.keyCode.END || g == a.inputmask.keyCode.PAGE_DOWN ? setTimeout(function() {
        var a = C(n());
        f.insertMode || a != B() || c.shiftKey || a--, L(d, c.shiftKey ? i.begin : a, a)
      }, 0) : g == a.inputmask.keyCode.HOME && !c.shiftKey || g == a.inputmask.keyCode.PAGE_UP ? L(d, 0, c.shiftKey ? i.begin : 0) : (f.undoOnEscape && g == a.inputmask.keyCode.ESCAPE || 90 == g && c.ctrlKey) && c.altKey !== !0 ? (H(d, !0, !1, _.split("")), e.click()) : g != a.inputmask.keyCode.INSERT || c.shiftKey || c.ctrlKey ? 0 != f.insertMode || c.shiftKey || (g == a.inputmask.keyCode.RIGHT ? setTimeout(function() {
        var a = L(d);
        L(d, a.begin)
      }, 0) : g == a.inputmask.keyCode.LEFT && setTimeout(function() {
        var a = L(d);
        L(d, ea ? a.begin + 1 : a.begin - 1)
      }, 0)) : (f.insertMode = !f.insertMode, L(d, f.insertMode || i.begin != B() ? i.begin : i.begin - 1)), f.onKeyDown.call(this, c, v(), L(d).begin, f), ha = -1 != a.inArray(g, f.ignorables)
    }

    function U(b, c, d, e, g) {
      var h = this,
        i = a(h),
        j = b.which || b.charCode || b.keyCode;
      if (!(c === !0 || b.ctrlKey && b.altKey) && (b.ctrlKey || b.metaKey || ha)) return !0;
      if (j) {
        46 == j && 0 == b.shiftKey && "," == f.radixPoint && (j = 44);
        var k, n = c ? {
            begin: g,
            end: g
          } : L(h),
          p = String.fromCharCode(j),
          q = P(n.begin, n.end);
        q && (l().undoPositions = a.extend(!0, {}, l().validPositions), S(h, a.inputmask.keyCode.DELETE, n, !0), n.begin = l().p, f.insertMode || (f.insertMode = !f.insertMode, o(n.begin, e), f.insertMode = !f.insertMode), q = !f.multi), l().writeOutBuffer = !0;
        var r = ea && !q ? n.end : n.begin,
          s = z(r, p, e);
        if (s !== !1) {
          if (s !== !0 && (r = void 0 != s.pos ? s.pos : r, p = void 0 != s.c ? s.c : p), m(!0), void 0 != s.caret) k = s.caret;
          else {
            var u = l().validPositions;
            k = !f.keepStatic && (void 0 != u[r + 1] && t(r + 1, u[r].locator.slice(), r).length > 1 || void 0 != u[r].alternation) ? r + 1 : C(r)
          }
          l().p = k
        }
        if (d !== !1) {
          var x = this;
          if (setTimeout(function() {
              f.onKeyValidation.call(x, s, f)
            }, 0), l().writeOutBuffer && s !== !1) {
            var y = v();
            F(h, y, c ? void 0 : f.numericInput ? D(k) : k, b, c !== !0), c !== !0 && setTimeout(function() {
              O(y) === !0 && i.trigger("complete")
            }, 0)
          } else q && (l().buffer = void 0, l().validPositions = l().undoPositions)
        } else q && (l().buffer = void 0, l().validPositions = l().undoPositions);
        if (f.showTooltip && i.prop("title", l().mask), c && a.isFunction(f.onBeforeWrite)) {
          var A = f.onBeforeWrite.call(this, b, v(), k, f);
          if (A && A.refreshFromBuffer) {
            var B = A.refreshFromBuffer;
            w(B === !0 ? B : B.start, B.end, A.buffer), m(!0), A.caret && (l().p = A.caret)
          }
        }
        b.preventDefault()
      }
    }

    function V(b) {
      var c = this,
        d = a(c),
        e = c._valueGet(!0),
        g = L(c);
      if ("propertychange" == b.type && c._valueGet().length <= B()) return !0;
      if ("paste" == b.type) {
        var h = e.substr(0, g.begin),
          i = e.substr(g.end, e.length);
        h == u().slice(0, g.begin).join("") && (h = ""), i == u().slice(g.end).join("") && (i = ""), window.clipboardData && window.clipboardData.getData ? e = h + window.clipboardData.getData("Text") + i : b.originalEvent && b.originalEvent.clipboardData && b.originalEvent.clipboardData.getData && (e = h + b.originalEvent.clipboardData.getData("text/plain") + i)
      }
      var j = e;
      if (a.isFunction(f.onBeforePaste)) {
        if (j = f.onBeforePaste.call(c, e, f), j === !1) return b.preventDefault(), !1;
        j || (j = e)
      }
      return H(c, !0, !1, ea ? j.split("").reverse() : j.split("")), d.click(), O(v()) === !0 && d.trigger("complete"), !1
    }

    function W(b) {
      var c = this;
      H(c, !0, !1), O(v()) === !0 && a(c).trigger("complete"), b.preventDefault()
    }

    function X(a) {
      var b = this;
      _ = v().join(""), ("" == ba || 0 != a.originalEvent.data.indexOf(ba)) && (aa = L(b))
    }

    function Y(b) {
      var c = this,
        d = aa || L(c);
      0 == b.originalEvent.data.indexOf(ba) && (m(), d = {
        begin: 0,
        end: 0
      });
      var e = b.originalEvent.data;
      L(c, d.begin, d.end);
      for (var g = 0; g < e.length; g++) {
        var h = a.Event("keypress");
        h.which = e.charCodeAt(g), fa = !1, ha = !1, U.call(c, h)
      }
      setTimeout(function() {
        var a = l().p;
        F(c, v(), f.numericInput ? D(a) : a)
      }, 0), ba = b.originalEvent.data
    }

    function Z() {}

    function $(b) {
      if (ca = a(b), ca.is(":input") && c(ca.attr("type")) || b.isContentEditable || ca.is("div")) {
        if (ca.data("_inputmask", {
            maskset: e,
            opts: f,
            isRTL: !1
          }), f.showTooltip && ca.prop("title", l().mask), ("rtl" == b.dir || f.rightAlign) && ca.css("text-align", "right"), "rtl" == b.dir || f.numericInput) {
          b.dir = "ltr", ca.removeAttr("dir");
          var d = ca.data("_inputmask");
          d.isRTL = !0, ca.data("_inputmask", d), ea = !0
        }
        ca.unbind(".inputmask"), (ca.is(":input") || b.isContentEditable) && (ca.closest("form").bind("submit", function() {
          _ != v().join("") && ca.change(), ca[0]._valueGet && ca[0]._valueGet() == u().join("") && ca[0]._valueSet(""), f.removeMaskOnSubmit && ca.inputmask("remove")
        }).bind("reset", function() {
          setTimeout(function() {
            ca.triggerHandler("setvalue.inputmask")
          }, 0)
        }), ca.bind("mouseenter.inputmask", function() {
          var b = a(this),
            c = this;
          !b.is(":focus") && f.showMaskOnHover && c._valueGet() != v().join("") && F(c, v())
        }).bind("blur.inputmask", function(b) {
          var c = a(this),
            d = this;
          if (c.data("_inputmask")) {
            var e = d._valueGet(),
              g = v().slice();
            ia = !0, _ != g.join("") && setTimeout(function() {
              c.change(), _ = g.join("")
            }, 0), "" != e && (f.clearMaskOnLostFocus && (e == u().join("") ? g = [] : N(g)), O(g) === !1 && (c.trigger("incomplete"), f.clearIncomplete && (m(), g = f.clearMaskOnLostFocus ? [] : u().slice())), F(d, g, void 0, b))
          }
        }).bind("focus.inputmask", function() {
          var b = (a(this), this),
            c = b._valueGet();
          f.showMaskOnFocus && (!f.showMaskOnHover || f.showMaskOnHover && "" == c) && b._valueGet() != v().join("") && F(b, v(), C(n())), _ = v().join("")
        }).bind("mouseleave.inputmask", function() {
          var b = a(this),
            c = this;
          if (f.clearMaskOnLostFocus) {
            var d = v().slice(),
              e = c._valueGet();
            b.is(":focus") || e == b.attr("placeholder") || "" == e || (e == u().join("") ? d = [] : N(d), F(c, d))
          }
        }).bind("click.inputmask", function() {
          var b = a(this),
            c = this;
          if (b.is(":focus")) {
            var d = L(c);
            if (d.begin == d.end)
              if (f.radixFocus && "" != f.radixPoint && -1 != a.inArray(f.radixPoint, v()) && (ia || v().join("") == u().join(""))) L(c, a.inArray(f.radixPoint, v())), ia = !1;
              else {
                var e = ea ? K(d.begin) : d.begin,
                  g = C(n(e));
                g > e ? L(c, A(e) ? e : C(e)) : L(c, g)
              }
          }
        }).bind("dblclick.inputmask", function() {
          var a = this;
          setTimeout(function() {
            L(a, 0, C(n()))
          }, 0)
        }).bind(k + ".inputmask dragdrop.inputmask drop.inputmask", V).bind("cut.inputmask", function(b) {
          ga = !0;
          var c = this,
            d = a(c),
            e = L(c);
          S(c, a.inputmask.keyCode.DELETE, e), F(c, v(), l().p, b, _ != v().join("")), c._valueGet() == u().join("") && d.trigger("cleared"), f.showTooltip && d.prop("title", l().mask)
        }).bind("complete.inputmask", f.oncomplete).bind("incomplete.inputmask", f.onincomplete).bind("cleared.inputmask", f.oncleared), ca.bind("keydown.inputmask", T).bind("keypress.inputmask", U), j || ca.bind("compositionstart.inputmask", X).bind("compositionupdate.inputmask", Y).bind("compositionend.inputmask", Z), "paste" === k && ca.bind("input.inputmask", W)), ca.bind("setvalue.inputmask", function() {
          var b = this,
            c = b._valueGet();
          b._valueSet(a.isFunction(f.onBeforeMask) ? f.onBeforeMask.call(b, c, f) || c : c), H(b, !0, !1), _ = v().join(""), (f.clearMaskOnLostFocus || f.clearIncomplete) && b._valueGet() == u().join("") && b._valueSet("")
        }), R(b);
        var g = a.isFunction(f.onBeforeMask) ? f.onBeforeMask.call(b, b._valueGet(), f) || b._valueGet() : b._valueGet();
        H(b, !0, !1, g.split(""));
        var h = v().slice();
        _ = h.join("");
        var i;
        try {
          i = document.activeElement
        } catch (o) {}
        O(h) === !1 && f.clearIncomplete && m(), f.clearMaskOnLostFocus && (h.join("") == u().join("") ? h = [] : N(h)), F(b, h), i === b && L(b, C(n())), Q(b)
      }
    }
    var _, aa, ba, ca, da, ea = !1,
      fa = !1,
      ga = !1,
      ha = !1,
      ia = !0;
    if (void 0 != d) switch (d.action) {
      case "isComplete":
        return ca = a(d.el), e = ca.data("_inputmask").maskset, f = ca.data("_inputmask").opts, O(d.buffer);
      case "unmaskedvalue":
        return ca = d.$input, e = ca.data("_inputmask").maskset, f = ca.data("_inputmask").opts, ea = d.$input.data("_inputmask").isRTL, J(d.$input);
      case "mask":
        _ = v().join(""), $(d.el);
        break;
      case "format":
        ca = a({}), ca.data("_inputmask", {
          maskset: e,
          opts: f,
          isRTL: f.numericInput
        }), f.numericInput && (ea = !0);
        var ja = (a.isFunction(f.onBeforeMask) ? f.onBeforeMask.call(ca, d.value, f) || d.value : d.value).split("");
        return H(ca, !1, !1, ea ? ja.reverse() : ja), a.isFunction(f.onBeforeWrite) && f.onBeforeWrite.call(this, void 0, v(), 0, f), d.metadata ? {
          value: ea ? v().slice().reverse().join("") : v().join(""),
          metadata: ca.inputmask("getmetadata")
        } : ea ? v().slice().reverse().join("") : v().join("");
      case "isValid":
        ca = a({}), ca.data("_inputmask", {
          maskset: e,
          opts: f,
          isRTL: f.numericInput
        }), f.numericInput && (ea = !0);
        var ja = d.value.split("");
        H(ca, !1, !0, ea ? ja.reverse() : ja);
        for (var ka = v(), la = M(), ma = ka.length - 1; ma > la && !A(ma); ma--);
        return ka.splice(la, ma + 1 - la), O(ka) && d.value == ka.join("");
      case "getemptymask":
        return ca = a(d.el), e = ca.data("_inputmask").maskset, f = ca.data("_inputmask").opts, u();
      case "remove":
        var na = d.el;
        ca = a(na), e = ca.data("_inputmask").maskset, f = ca.data("_inputmask").opts, na._valueSet(J(ca)), ca.unbind(".inputmask"), ca.removeData("_inputmask");
        var oa;
        Object.getOwnPropertyDescriptor && (oa = Object.getOwnPropertyDescriptor(na, "value")), oa && oa.get ? na._valueGet && Object.defineProperty(na, "value", {
          get: na._valueGet,
          set: na._valueSet
        }) : document.__lookupGetter__ && na.__lookupGetter__("value") && na._valueGet && (na.__defineGetter__("value", na._valueGet), na.__defineSetter__("value", na._valueSet));
        try {
          delete na._valueGet, delete na._valueSet
        } catch (pa) {
          na._valueGet = void 0, na._valueSet = void 0
        }
        break;
      case "getmetadata":
        if (ca = a(d.el), e = ca.data("_inputmask").maskset, f = ca.data("_inputmask").opts, a.isArray(e.metadata)) {
          for (var qa, ra = n(), sa = ra; sa >= 0; sa--)
            if (l().validPositions[sa] && void 0 != l().validPositions[sa].alternation) {
              qa = l().validPositions[sa].alternation;
              break
            }
          return void 0 != qa ? e.metadata[l().validPositions[ra].locator[qa]] : e.metadata[0]
        }
        return e.metadata
    }
  }
  if (void 0 === a.fn.inputmask) {
    var g = navigator.userAgent,
      h = null !== g.match(new RegExp("iphone", "i")),
      i = (null !== g.match(new RegExp("android.*safari.*", "i")), null !== g.match(new RegExp("android.*chrome.*", "i"))),
      j = null !== g.match(new RegExp("android.*firefox.*", "i")),
      k = (/Kindle/i.test(g) || /Silk/i.test(g) || /KFTT/i.test(g) || /KFOT/i.test(g) || /KFJWA/i.test(g) || /KFJWI/i.test(g) || /KFSOWI/i.test(g) || /KFTHWA/i.test(g) || /KFTHWI/i.test(g) || /KFAPWA/i.test(g) || /KFAPWI/i.test(g), b("paste") ? "paste" : b("input") ? "input" : "propertychange");
    a.inputmask = {
      defaults: {
        placeholder: "_",
        optionalmarker: {
          start: "[",
          end: "]"
        },
        quantifiermarker: {
          start: "{",
          end: "}"
        },
        groupmarker: {
          start: "(",
          end: ")"
        },
        alternatormarker: "|",
        escapeChar: "\\",
        mask: null,
        oncomplete: a.noop,
        onincomplete: a.noop,
        oncleared: a.noop,
        repeat: 0,
        greedy: !0,
        autoUnmask: !1,
        removeMaskOnSubmit: !1,
        clearMaskOnLostFocus: !0,
        insertMode: !0,
        clearIncomplete: !1,
        aliases: {},
        alias: null,
        onKeyDown: a.noop,
        onBeforeMask: void 0,
        onBeforePaste: void 0,
        onBeforeWrite: void 0,
        onUnMask: void 0,
        showMaskOnFocus: !0,
        showMaskOnHover: !0,
        onKeyValidation: a.noop,
        skipOptionalPartCharacter: " ",
        showTooltip: !1,
        numericInput: !1,
        rightAlign: !1,
        undoOnEscape: !0,
        radixPoint: "",
        radixFocus: !1,
        nojumps: !1,
        nojumpsThreshold: 0,
        keepStatic: void 0,
        definitions: {
          9: {
            validator: "[0-9]",
            cardinality: 1,
            definitionSymbol: "*"
          },
          a: {
            validator: "[A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]",
            cardinality: 1,
            definitionSymbol: "*"
          },
          "*": {
            validator: "[0-9A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]",
            cardinality: 1
          }
        },
        ignorables: [8, 9, 13, 19, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123],
        isComplete: void 0,
        canClearPosition: a.noop,
        postValidation: void 0
      },
      keyCode: {
        ALT: 18,
        BACKSPACE: 8,
        CAPS_LOCK: 20,
        COMMA: 188,
        COMMAND: 91,
        COMMAND_LEFT: 91,
        COMMAND_RIGHT: 93,
        CONTROL: 17,
        DELETE: 46,
        DOWN: 40,
        END: 35,
        ENTER: 13,
        ESCAPE: 27,
        HOME: 36,
        INSERT: 45,
        LEFT: 37,
        MENU: 93,
        NUMPAD_ADD: 107,
        NUMPAD_DECIMAL: 110,
        NUMPAD_DIVIDE: 111,
        NUMPAD_ENTER: 108,
        NUMPAD_MULTIPLY: 106,
        NUMPAD_SUBTRACT: 109,
        PAGE_DOWN: 34,
        PAGE_UP: 33,
        PERIOD: 190,
        RIGHT: 39,
        SHIFT: 16,
        SPACE: 32,
        TAB: 9,
        UP: 38,
        WINDOWS: 91
      },
      masksCache: {},
      escapeRegex: function(a) {
        var b = ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^"];
        return a.replace(new RegExp("(\\" + b.join("|\\") + ")", "gim"), "\\$1")
      },
      format: function(b, c, g) {
        var h = a.extend(!0, {}, a.inputmask.defaults, c);
        return d(h.alias, c, h), f({
          action: "format",
          value: b,
          metadata: g
        }, e(h, c && void 0 !== c.definitions), h)
      },
      isValid: function(b, c) {
        var g = a.extend(!0, {}, a.inputmask.defaults, c);
        return d(g.alias, c, g), f({
          action: "isValid",
          value: b
        }, e(g, c && void 0 !== c.definitions), g)
      }
    }, a.fn.inputmask = function(b, c) {
      function g(b, c, e) {
        var f = a(b);
        f.data("inputmask-alias") && d(f.data("inputmask-alias"), a.extend(!0, {}, c), c);
        for (var g in c) {
          var h = f.data("inputmask-" + g.toLowerCase());
          void 0 != h && ("mask" == g && 0 == h.indexOf("[") ? (c[g] = h.replace(/[\s[\]]/g, "").split("','"), c[g][0] = c[g][0].replace("'", ""), c[g][c[g].length - 1] = c[g][c[g].length - 1].replace("'", "")) : c[g] = "boolean" == typeof h ? h : h.toString(), e && (e[g] = c[g]))
        }
        return c
      }
      var h, i = a.extend(!0, {}, a.inputmask.defaults, c);
      if ("string" == typeof b) switch (b) {
        case "mask":
          return d(i.alias, c, i), this.each(function() {
            return g(this, i), h = e(i, c && void 0 !== c.definitions), void 0 == h ? this : void f({
              action: "mask",
              el: this
            }, h, i)
          });
        case "unmaskedvalue":
          var j = a(this);
          return j.data("_inputmask") ? f({
            action: "unmaskedvalue",
            $input: j
          }) : j.val();
        case "remove":
          return this.each(function() {
            var b = a(this);
            b.data("_inputmask") && f({
              action: "remove",
              el: this
            })
          });
        case "getemptymask":
          return this.data("_inputmask") ? f({
            action: "getemptymask",
            el: this
          }) : "";
        case "hasMaskedValue":
          return this.data("_inputmask") ? !this.data("_inputmask").opts.autoUnmask : !1;
        case "isComplete":
          return this.data("_inputmask") ? f({
            action: "isComplete",
            buffer: this[0]._valueGet().split(""),
            el: this
          }) : !0;
        case "getmetadata":
          return this.data("_inputmask") ? f({
            action: "getmetadata",
            el: this
          }) : void 0;
        default:
          return d(i.alias, c, i), d(b, c, i) || (i.mask = b), this.each(function() {
            return g(this, i), h = e(i, c && void 0 !== c.definitions), void 0 == h ? this : void f({
              action: "mask",
              el: this
            }, h, i)
          })
      } else {
        if ("object" == typeof b) return i = a.extend(!0, {}, a.inputmask.defaults, b), d(i.alias, b, i), this.each(function() {
          return g(this, i), h = e(i, b && void 0 !== b.definitions), void 0 == h ? this : void f({
            action: "mask",
            el: this
          }, h, i)
        });
        if (void 0 == b) return this.each(function() {
          var b = a(this).attr("data-inputmask");
          if (b && "" != b) try {
            b = b.replace(new RegExp("'", "g"), '"');
            var e = a.parseJSON("{" + b + "}");
            a.extend(!0, e, c), i = a.extend(!0, {}, a.inputmask.defaults, e), i = g(this, i), d(i.alias, e, i), i.alias = void 0, a(this).inputmask("mask", i)
          } catch (f) {}
          if (a(this).attr("data-inputmask-mask") || a(this).attr("data-inputmask-alias")) {
            i = a.extend(!0, {}, a.inputmask.defaults, {});
            var h = {};
            i = g(this, i, h), d(i.alias, h, i), i.alias = void 0, a(this).inputmask("mask", i)
          }
        })
      }
    }
  }
  return a.fn.inputmask
});

/** jquery.countdown.js */
/**
 * @name    jQuery Countdown Plugin
 * @author    Martin Angelov
 * @version   1.0
 * @url     http://tutorialzine.com/2011/12/countdown-jquery/
 * @license   MIT License
 */

(function($) {

  // Number of seconds in every time division
  var days = 24 * 60 * 60,
    hours = 60 * 60,
    minutes = 60;

  // Creating the plugin
  $.fn.countdown = function(prop) {

    var options = $.extend({
      callback: function() {},
      timestamp: 0
    }, prop);

    var left, d, h, m, s, positions;

    // Initialize the plugin
    init(this, options);

    positions = this.find('.position');

    (function tick() {

      // Time left
      left = Math.floor((options.timestamp - (new Date())) / 1000);

      if (left < 0) {
        left = 0;
      }

      // Number of days left
      d = Math.floor(left / days);
      updateDuo(0, 1, d);
      left -= d * days;


      // Number of hours left
      h = Math.floor(left / hours);
      updateDuo(2, 3, h);
      left -= h * hours;

      // Number of minutes left
      m = Math.floor(left / minutes);
      updateDuo(4, 5, m);
      left -= m * minutes;

      // Number of seconds left
      s = left;
      updateDuo(6, 7, s);

      // Calling an optional user supplied callback
      options.callback(d, h, m, s);

      // Scheduling another call of this function in 1s
      setTimeout(tick, 1000);
    })();

    // This function updates two digit positions at once
    function updateDuo(minor, major, value) {
      switchDigit(positions.eq(minor), Math.floor(value / 10) % 10);
      switchDigit(positions.eq(major), value % 10);
    }

    return this;
  };


  function init(elem, options) {
    elem.addClass('countdownHolder');

    // Creating the markup inside the container
    $.each(['Days', 'Hours', 'Minutes', 'Seconds'], function(i) {
      $('<span class="count' + this + '">').html(
        '<span class="position">\
          <span class="digit static">0</span>\
        </span>\
        <span class="position">\
          <span class="digit static">0</span>\
        </span>'
      ).appendTo(elem);

      if (this != "Seconds") {
        elem.append('<span class="countDiv countDiv' + i + '"><span class="position1"></span></span>');
      }
    });

  }

  // Creates an animated transition between the two numbers
  function switchDigit(position, number) {

    var digit = position.find('.digit')

    if (digit.is(':animated')) {
      return false;
    }

    if (position.data('digit') == number) {
      // We are already showing this number
      return false;
    }

    position.data('digit', number);

    var replacement = $('<span>', {
      'class': 'digit',
      css: {
        top: '-2.1em',
        opacity: 0
      },
      html: number
    });

    // The .static class is added when the animation
    // completes. This makes it run smoother.

    digit
      .before(replacement)
      .removeClass('static')
      .animate({
        top: '2.5em',
        opacity: 0
      }, 'fast', function() {
        digit.remove();
      })

    replacement
      .delay(100)
      .animate({
        top: 0,
        opacity: 1
      }, 'fast', function() {
        replacement.addClass('static');
      });
  }
})(jQuery);

/** carousel.js */
//готовые проекты

//Обработка клика на стрелку вправо
$(document).on('click', ".s3 .carousel-button-right", function() {
  var carusel = $(this).parents('.carousel');
  right_carusel(carusel);
  return false;
});
//Обработка клика на стрелку влево
$(document).on('click', ".s3 .carousel-button-left", function() {
  var carusel = $(this).parents('.carousel');
  left_carusel(carusel);
  return false;
});

function left_carusel(carusel) {
  var block_width = $(carusel).find('.carousel-block').outerWidth();
  /* по 1 */

  /* по 3 */
  $(carusel).find(".carousel-items .carousel-block").eq(-1).clone().prependTo($(carusel).find(".carousel-items"));
  $(carusel).find(".carousel-items .carousel-block").eq(-1).remove();
  $(carusel).find(".carousel-items .carousel-block").eq(-1).clone().prependTo($(carusel).find(".carousel-items"));
  $(carusel).find(".carousel-items .carousel-block").eq(-1).remove();
  $(carusel).find(".carousel-items .carousel-block").eq(-1).clone().prependTo($(carusel).find(".carousel-items"));
  $(carusel).find(".carousel-items .carousel-block").eq(-1).remove();

  $(carusel).find(".carousel-items").css({
    "left": "-" + block_width * 3 + "px"
  });


  $(carusel).find(".carousel-items").animate({
    left: "0px"
  }, 200);

}

function right_carusel(carusel) {
  var block_width = $(carusel).find('.carousel-block').outerWidth();
  $(carusel).find(".carousel-items").animate({
    left: "-" + block_width * 3 + "px"
  }, 200, function() {


    $(carusel).find(".carousel-items .carousel-block").eq(0).clone().appendTo($(carusel).find(".carousel-items"));
    $(carusel).find(".carousel-items .carousel-block").eq(0).remove();
    $(carusel).find(".carousel-items .carousel-block").eq(0).clone().appendTo($(carusel).find(".carousel-items"));
    $(carusel).find(".carousel-items .carousel-block").eq(0).remove();
    $(carusel).find(".carousel-items .carousel-block").eq(0).clone().appendTo($(carusel).find(".carousel-items"));
    $(carusel).find(".carousel-items .carousel-block").eq(0).remove();

    $(carusel).find(".carousel-items").css({
      "left": "0px"
    });
  });

}

$(function() {
  //Раскомментируйте строку ниже, чтобы включить автоматическую прокрутку карусели
  auto_right('.s3 .carousel:first');
})

// Автоматическая прокрутка
function auto_right(carusel) {
  setInterval(function() {
    if (!$(carusel).is('.hover'))
      right_carusel(carusel);
  }, 5000)
}
// Навели курсор на карусель
$(document).on('mouseenter', '.carousel', function() {
    $(this).addClass('hover')
  })
  //Убрали курсор с карусели
$(document).on('mouseleave', '.carousel', function() {
  $(this).removeClass('hover')
})


///////////////////////////////////


//Обработка клика на стрелку вправо
$(document).on('click', ".s4 .carousel-button-right", function() {
  var carusel = $(this).parents('.carousel');
  right_carusel_s4(carusel);
  return false;
});
//Обработка клика на стрелку влево
$(document).on('click', ".s4 .carousel-button-left", function() {
  var carusel = $(this).parents('.carousel');
  left_carusel_s4(carusel);
  return false;
});

function left_carusel_s4(carusel) {
  var block_width = $(carusel).find('.carousel-block').outerWidth();
  /* по 1 */

  $(carusel).find(".carousel-items .carousel-block").eq(-1).clone().prependTo($(carusel).find(".carousel-items"));
  $(carusel).find(".carousel-items").css({
    "left": "-" + block_width + "px"
  });
  $(carusel).find(".carousel-items .carousel-block").eq(-1).remove();
  $(carusel).find(".carousel-items").animate({
    left: "0px"
  }, 200);

}

function right_carusel_s4(carusel) {
  var block_width = $(carusel).find('.carousel-block').outerWidth();

  $(carusel).find(".carousel-items").animate({
    left: "-" + block_width + "px"
  }, 200, function() {
    $(carusel).find(".carousel-items .carousel-block").eq(0).clone().appendTo($(carusel).find(".carousel-items"));
    $(carusel).find(".carousel-items .carousel-block").eq(0).remove();
    $(carusel).find(".carousel-items").css({
      "left": "0px"
    });
  });


}

$(function() {
  //Раскомментируйте строку ниже, чтобы включить автоматическую прокрутку карусели
  // auto_right_s4('.s4 .carousel:first');
})

// Автоматическая прокрутка
function auto_right_s4(carusel) {
  setInterval(function() {
    if (!$(carusel).is('.hover'))
      right_carusel(carusel);
  }, 5000)
}


///////////////////////////////////


//Обработка клика на стрелку вправо
$(document).on('click', ".gal_okna .carousel-button-right", function() {
  var carusel = $(this).parents('.carousel');
  right_carusel_svet(carusel);
  return false;
});
//Обработка клика на стрелку влево
$(document).on('click', ".gal_okna .carousel-button-left", function() {
  var carusel = $(this).parents('.carousel');
  left_carusel_svet(carusel);
  return false;
});
//Обработка клика на стрелку вправо
$(document).on('click', ".k_gal .carousel-button-right", function() {
  var carusel = $(this).parents('.carousel');
  right_carusel_svet(carusel);
  return false;
});
//Обработка клика на стрелку влево
$(document).on('click', ".k_gal .carousel-button-left", function() {
  var carusel = $(this).parents('.carousel');
  left_carusel_svet(carusel);
  return false;
});

function left_carusel_svet(carusel) {
  var block_width = $(carusel).find('.carousel-block').outerWidth();
  /* по 1 */

  $(carusel).find(".carousel-items .carousel-block").eq(-1).clone().prependTo($(carusel).find(".carousel-items"));
  $(carusel).find(".carousel-items").css({
    "left": "-" + block_width + "px"
  });
  $(carusel).find(".carousel-items .carousel-block").eq(-1).remove();
  $(carusel).find(".carousel-items").animate({
    left: "0px"
  }, 200);

}

function right_carusel_svet(carusel) {
  var block_width = $(carusel).find('.carousel-block').outerWidth();

  $(carusel).find(".carousel-items").animate({
    left: "-" + block_width + "px"
  }, 200, function() {
    $(carusel).find(".carousel-items .carousel-block").eq(0).clone().appendTo($(carusel).find(".carousel-items"));
    $(carusel).find(".carousel-items .carousel-block").eq(0).remove();
    $(carusel).find(".carousel-items").css({
      "left": "0px"
    });
  });
}

$(function() {
  //Раскомментируйте строку ниже, чтобы включить автоматическую прокрутку карусели
  // auto_right_svet('.svet .carousel:first');
})

// Автоматическая прокрутка
function auto_right_svet(carusel) {
  setInterval(function() {
    if (!$(carusel).is('.hover'))
      right_carusel(carusel);
  }, 5000)
}

/** jquery.scrollTo-min.js */
/*!
 * jQuery.scrollTo
 * Copyright (c) 2007-2014 Ariel Flesler - aflesler<a>gmail<d>com | http://flesler.blogspot.com
 * Licensed under MIT
 * http://flesler.blogspot.com/2007/10/jqueryscrollto.html
 * @projectDescription Easy element scrolling using jQuery.
 * @author Ariel Flesler
 * @version 1.4.14
 */
;
(function(define) {
  'use strict';

  define(['jquery'], function($) {
    var $scrollTo = $.scrollTo = function(target, duration, settings) {
      return $(window).scrollTo(target, duration, settings);
    };

    $scrollTo.defaults = {
      axis: 'xy',
      duration: 0,
      limit: true
    };

    // Returns the element that needs to be animated to scroll the window.
    // Kept for backwards compatibility (specially for localScroll & serialScroll)
    $scrollTo.window = function() {
      return $(window)._scrollable();
    };

    // Hack, hack, hack :)
    // Returns the real elements to scroll (supports window/iframes, documents and regular nodes)
    $.fn._scrollable = function() {
      return this.map(function() {
        var elem = this,
          isWin = !elem.nodeName || $.inArray(elem.nodeName.toLowerCase(), ['iframe', '#document', 'html', 'body']) !== -1;

        if (!isWin) {
          return elem;
        }

        var doc = (elem.contentWindow || elem).document || elem.ownerDocument || elem;

        return /webkit/i.test(navigator.userAgent) || doc.compatMode === 'BackCompat' ?
          doc.body :
          doc.documentElement;
      });
    };

    $.fn.scrollTo = function(target, duration, settings) {
      if (typeof duration === 'object') {
        settings = duration;
        duration = 0;
      }
      if (typeof settings === 'function') {
        settings = {
          onAfter: settings
        };
      }
      if (target === 'max') {
        target = 9e9;
      }

      settings = $.extend({}, $scrollTo.defaults, settings);
      // Speed is still recognized for backwards compatibility
      duration = duration || settings.duration;
      // Make sure the settings are given right
      settings.queue = settings.queue && settings.axis.length > 1;

      if (settings.queue) {
        // Let's keep the overall duration
        duration /= 2;
      }
      settings.offset = both(settings.offset);
      settings.over = both(settings.over);

      return this._scrollable().each(function() {
        // Null target yields nothing, just like jQuery does
        if (target === null) return;

        var elem = this,
          $elem = $(elem),
          targ = target,
          toff, attr = {},
          win = $elem.is('html,body');

        switch (typeof targ) {
          // A number will pass the regex
          case 'number':
          case 'string':
            if (/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(targ)) {
              targ = both(targ);
              // We are done
              break;
            }
            // Relative/Absolute selector, no break!
            targ = win ? $(targ) : $(targ, this);
            if (!targ.length) return;
            /* falls through */
          case 'object':
            // DOMElement / jQuery
            if (targ.is || targ.style) {
              // Get the real position of the target
              toff = (targ = $(targ)).offset();
            }
        }

        var offset = $.isFunction(settings.offset) && settings.offset(elem, targ) || settings.offset;

        $.each(settings.axis.split(''), function(i, axis) {
          var Pos = axis === 'x' ? 'Left' : 'Top',
            pos = Pos.toLowerCase(),
            key = 'scroll' + Pos,
            old = elem[key],
            max = $scrollTo.max(elem, axis);

          if (toff) { // jQuery / DOMElement
            attr[key] = toff[pos] + (win ? 0 : old - $elem.offset()[pos]);

            // If it's a dom element, reduce the margin
            if (settings.margin) {
              attr[key] -= parseInt(targ.css('margin' + Pos), 10) || 0;
              attr[key] -= parseInt(targ.css('border' + Pos + 'Width'), 10) || 0;
            }

            attr[key] += offset[pos] || 0;

            if (settings.over[pos]) {
              // Scroll to a fraction of its width/height
              attr[key] += targ[axis === 'x' ? 'width' : 'height']() * settings.over[pos];
            }
          } else {
            var val = targ[pos];
            // Handle percentage values
            attr[key] = val.slice && val.slice(-1) === '%' ?
              parseFloat(val) / 100 * max : val;
          }

          // Number or 'number'
          if (settings.limit && /^\d+$/.test(attr[key])) {
            // Check the limits
            attr[key] = attr[key] <= 0 ? 0 : Math.min(attr[key], max);
          }

          // Queueing axes
          if (!i && settings.queue) {
            // Don't waste time animating, if there's no need.
            if (old !== attr[key]) {
              // Intermediate animation
              animate(settings.onAfterFirst);
            }
            // Don't animate this axis again in the next iteration.
            delete attr[key];
          }
        });

        animate(settings.onAfter);

        function animate(callback) {
          $elem.animate(attr, duration, settings.easing, callback && function() {
            callback.call(this, targ, settings);
          });
        }
      }).end();
    };

    // Max scrolling position, works on quirks mode
    // It only fails (not too badly) on IE, quirks mode.
    $scrollTo.max = function(elem, axis) {
      var Dim = axis === 'x' ? 'Width' : 'Height',
        scroll = 'scroll' + Dim;

      if (!$(elem).is('html,body'))
        return elem[scroll] - $(elem)[Dim.toLowerCase()]();

      var size = 'client' + Dim,
        html = elem.ownerDocument.documentElement,
        body = elem.ownerDocument.body;

      return Math.max(html[scroll], body[scroll]) - Math.min(html[size], body[size]);
    };

    function both(val) {
      return $.isFunction(val) || $.isPlainObject(val) ? val : {
        top: val,
        left: val
      };
    }

    // AMD requirement
    return $scrollTo;
  });
}(typeof define === 'function' && define.amd ? define : function(deps, factory) {
  'use strict';
  if (typeof module !== 'undefined' && module.exports) {
    // Node
    module.exports = factory(require('jquery'));
  } else {
    factory(jQuery);
  }
}));


$('.tel .call').click(function() {
  $('.popup1 .pop_type').val('call');
  $('.popup1 .header').html('МЫ ПЕРЕЗВОНИМ ЧЕРЕЗ 10 МИНУТ!');
  $('#hide-layout, #popup1').fadeIn(300);
})

$('.vyzov .zam a').click(function() {
  $('.popup1 .pop_type').val('zamer');
  $('.popup1 .header').html('ЗАПИСЬ НА <span class="yellow">БЕСПЛАТНЫЙ</span> ЗАМЕР!');
  $('#hide-layout, #popup1').fadeIn(300);
})

$(".toptop").click(function() {
  $("body,html").animate({
    scrollTop: 0
  }, 100);
  return false
});

$(document).on('click', '.carousel-button-left', function() {
  $("div[rel^='prettyPhoto'] a").prettyPhoto();
});

$(document).on('click', '.carousel-button-right', function() {
  $("div[rel^='prettyPhoto'] a").prettyPhoto();
});


$(window).scroll(function() {
  var a = 0;
  if (($(this).scrollTop() > 500) && ($(this).scrollTop() < $(document).height() - 1000)) {
    //if (($(this).scrollTop() > 500)) {
    if (a == 0) {
      $('.scroll').animate({
        right: 15
      });
      a = 1;
    }
  } else {
    if (a == 1) {
      $('.scroll').animate({
        right: -200
      });
      a = 0;
    }
  }

  var b = 0;
  if (($(this).scrollTop() > 500) && ($(this).scrollTop() < $(document).height() - 1000)) {
    if (b == 0) {
      $('.toptop').animate({
        left: 15
      });
      b = 1;
    }
  } else {
    if (b == 1) {
      $('.toptop').animate({
        left: -200
      });
      b = 0;
    }
  }
});


$(window).scroll(function() {

  var ii = 1;

  if ($('.grafic').length > 0) {
    var blocks = $('.grafic');

    var windowSize = $(window).height();
    var scrollElem = ((navigator.userAgent.toLowerCase().indexOf('webkit') != -1) ? 'body' : 'html');

    var viewportTop = $(scrollElem).scrollTop();
    var viewportBottom = (viewportTop + windowSize);
    var offset = 100;

    var elemTop = Math.round(blocks.offset().top) - offset;
    var elemBottom = elemTop + (blocks.height());

    if ((elemTop < viewportBottom) && (elemBottom > viewportTop)) {
      if (ii == 1) {
        grafic();
      }
      ii = 0;
    };
  }
});

$(window).scroll(function() {

  if ($('.w_blocks').length > 1) {
    var blocks = $('.w_blocks').children();
    var windowSize = $(window).height();
    var scrollElem = ((navigator.userAgent.toLowerCase().indexOf('webkit') != -1) ? 'body' : 'html');
    var viewportTop = $(scrollElem).scrollTop();
    var viewportBottom = (viewportTop + windowSize);
    var offset = 100;
    var elemTop = Math.round(blocks.offset().top) - offset;
    var elemBottom = elemTop + (blocks.height());
    if ((elemTop < viewportBottom) && (elemBottom > viewportTop)) {
      var i = 0;
      animateCircle1(blocks);
    };
  }

  function animateCircle1() {
    $(blocks[i]).addClass('visible animated fadeIn');
    $(blocks[i]).removeClass('hidden');
    i++;
    if (i <= blocks.length) {
      startAnimation();
    }
  }

  function startAnimation() {
    setTimeout(function() {
      animateCircle1();
    }, 450);
  }
});

$(".v_tel").inputmask("+7 (999) 999-99-99");
$(".v_tell").inputmask("+7 (999) 999-99-99");
$(".v_tel3").inputmask("+7 (999) 999-99-99");

$(function() {
  var note = $('#note'),
    ts = new Date(2015, 9, 5),
    newYear = true;
  if ((new Date()) > ts) {
    // The new year is here! Count towards something else.
    // Notice the *1000 at the end - time must be in milliseconds
    ts = (new Date()).getTime() + 10 * 24 * 60 * 60 * 1000;
    newYear = false;
  }
  $('#countdown1').countdown({
    timestamp: ts,
    callback: function(days, hours, minutes, seconds) {
      var message = "";
      //  message += days + " day" + ( days==1 ? '':'s' ) + ", ";
      message += hours + " hour" + (hours == 1 ? '' : 's') + ", ";
      message += minutes + " minute" + (minutes == 1 ? '' : 's') + " and ";
      message += seconds + " second" + (seconds == 1 ? '' : 's') + " <br />";
      if (newYear) {
        message += "left until the new year!";
      } else {
        message += "left to 10 days from now!";
      }
      note.html(message);
    }
  });
});

$(document).ready(function() {

  $('#otz_carousel').boutique({
    container_width: 800,
    front_img_width: 164,
    hovergrowth: 0,
    autoplay: true,
    autoplay_interval: 5000,
    stop_autoplay_on_click: true,
    behind_topmargin: 80,
    behind_opacity: 1,
    behind_size: 0.7,
    back_opacity: 1,
    back_size: 0.7,
    back_topmargin: 120,
  });

  $('#otz_carousel .frame3 img').attr('src', 'img/' + ($('#otz_carousel .frame3 img').attr('id') + '.png'));
  $('#otz_carousel .frame3 .otz_prof').removeClass('hide');
  $('#otz_carousel .frame3 .otz_name').css('color', '#000');
  $('.otz .otz1').removeClass('hide');

  $("div[rel^='prettyPhoto'] a").click(function() {
    return false;
  })
  $("div[rel^='prettyPhoto'] a").prettyPhoto();

  var wblocks = $('.w_blocks').children();
  wblocks.addClass('hidden');

  var wblocks = $('.stroki').children();
  wblocks.addClass('hidden');

});

$(function() {
  alignCenter($('#popup1'));
  alignCenter($('#spasibo'));
  alignCenter($('#pozdr'));
  $(window).resize(function() {
    alignCenter($('#popup1'));
    alignCenter($('#spasibo'));
    alignCenter($('#pozdr'));
  })

  $('#hide-layout').click(function() {

    $('#hide-layout, #popup1').fadeOut(300);

    $('.pop_name').val('Ваше имя');
    $('.pop_tel').val('Телефон');
  })

  $('#callback-spasibo, #hide-layout').click(function() {
    $('#hide-layout, #spasibo').fadeOut(300);

    $('.pop_name').val('');
    $('.pop_tel').val('');
  })

  function alignCenter(elem) {
    elem.css({
      left: ($(window).width() - elem.width()) / 2 - 10 + 'px',
      top: 50 + 'px'
    })
  }
})
$(function() {
  $(".bl_sw").slider({
    min: 0, //hot
    max: 1, //cold
    animate: "slow",
    change: function(event, ui) {
      //alert ($(this).slider( "option", "value" ));
      if ($(this).slider("option", "value") == '0') {
        $(".features_cold").addClass('hide');
        $(".features_hot").removeClass('hide');
        $(".bl_cold").removeClass('active_');
        $(".bl_cold").addClass('inactive_');
        $(".bl_hot").removeClass('inactive_');
        $(".bl_hot").addClass('active_');
        $(".bal_bg").removeClass('cold_bg');
      } else {
        $(".features_cold").removeClass('hide');
        $(".features_hot").addClass('hide');
        $(".bl_hot").removeClass('active_');
        $(".bl_hot").addClass('inactive_');
        $(".bl_cold").removeClass('inactive_');
        $(".bl_cold").addClass('active_');
        $(".bal_bg").addClass('cold_bg');
      }
    }
  });
  $(".bl_cold").click(function() {
    $(".bl_sw").slider("value", 1);
  })
  $(".bl_hot").click(function() {
    $(".bl_sw").slider("value", 0);
  })
});
$(function() {
  $("#slider-horizontal").slider({
    range: "min",
    min: 80,
    max: 300,
    step: 10,
    value: 120,
    slide: function(event, ui) {
      $(".c_width").val(ui.value);
      $(".z_w").html(ui.value + ' см');
      var a = $('#slider-horizontal span').css('left');
      $(".z_w").css('left', a);
      oknaCalc();
    }
  });
  $(".c_width").val($("#slider-horizontal").slider("value"));
  $(".z_w").html($("#slider-horizontal").slider("value") + ' см');
});
var current_id = "o1_1";
$(function() {
  $("#slider-vertical").slider({
    orientation: "vertical",
    range: "min",
    min: 80,
    max: 220,
    step: 10,
    value: 120,
    slide: function(event, ui) {
      $(".c_height").val(ui.value);
      $(".z_h").html(ui.value + ' см');
      var a = $('#slider-vertical span').css('bottom');
      $(".z_h").css('bottom', a);
      oknaCalc();
    }
  });
  $(".c_height").val($("#slider-vertical").slider("value"));
  $(".z_h").html($("#slider-vertical").slider("value") + ' см');
});

$(function() {
  $('.variants_gal div').click(function() {
    $('.variants_gal div').removeClass('active');
    $(this).addClass('active');
    var id = $('.combo .combo_option.active .select').attr('id');
    //`alert (id);
    var n = 'gofra_';
    if (id == 'select1') {
      n = 'gofra_';
    } else {
      n = 'sid_';
    }
    var e = $('.variants_gal .active').attr('id');
    $('.bal_left .bal_shell').css('background', 'url("img/bal_config/' + n + e + '.png") no-repeat left top');
  })
  $(".hot_").click(function() {
    $(".sw_block .bl_hot").click();
  })
  $(".cold_").click(function() {
    $(".sw_block .bl_cold").click();
  })

  $('.combo .combo_option .select').click(function() {
    $('.combo .combo_option').removeClass('active');
    $(this).parent().addClass('active');
    var id = $(this).attr('id');
    //alert(id);
    var n = 'gofra_';
    if (id == 'select1') {
      n = 'gofra_';
    } else {
      n = 'sid_';
    }
    var e = $('.variants_gal .active').attr('id');
    $('.bal_left .bal_shell').css('background', 'url("img/bal_config/' + n + e + '.png") no-repeat left top');
  })

  $('.l_roof .vars div').click(function() {
    $('.l_roof div').removeClass('active');
    $(this).addClass('active');
    var id = $(this).attr('id');
    roof = id;
    if (okno == 'okno2') {
      $('.l_center .maket_roof').css('background', 'url("img/' + id + '_m.png") no-repeat');
    } else {
      $('.l_center .maket_roof').css('background', 'url("img/' + id + '_mh.png") no-repeat');
    }
    l_calc();
  })
  $('.l_okno .vars div').click(function() {
    $('.l_okno div').removeClass('active');
    $(this).addClass('active');
    var id = $(this).attr('id');
    okno = id;
    $('.l_center .maket_okno').css('background', 'url("img/' + id + '_m.png") no-repeat');
    if (okno == 'okno2') {
      $('.l_center .maket_roof').css('background', 'url("img/' + roof + '_m.png") no-repeat');
    } else {
      $('.l_center .maket_roof').css('background', 'url("img/' + roof + '_mh.png") no-repeat');
    }
    l_calc();
  })
  $('.l_shell .vars div').click(function() {
    $('.l_shell div').removeClass('active');
    $(this).addClass('active');
    var id = $(this).attr('id');
    shell = id;
    $('.l_center .maket_shell').css('background', 'url("img/' + id + '_m.png") no-repeat');
    l_calc();
  })
  $('.l_struct .vars div').click(function() {
    $('.l_struct div').removeClass('active');
    $(this).addClass('active');
    var id = $(this).attr('id');
    struct = id;
    $('.l_center .maket_struct').css('background', 'url("img/' + id + '_m.png") no-repeat');
    l_calc();
  })
  $('.l_otdelka .swich span').click(function() {
    $('.l_otdelka .swich span').removeClass('active');
    $(this).addClass('active');
    var id = $(this).attr('id');
    $('.l_otdelka .vars div').removeClass('hide');
    $('.l_otdelka .vars div').addClass('hide');
    $('.l_otdelka .vars div.' + id).removeClass('hide');
    $('.l_otdelka .vars div.' + id + ' div').removeClass('hide');
  })
  $('.l_otdelka .vars div').click(function() {
    $('.l_otdelka div').removeClass('active');
    $(this).addClass('active');
    var id = $(this).attr('id');
    otdelka = id;
    $('.l_center .maket_otdelka').css('background', 'url("img/' + id + '_m.png") no-repeat');
    l_calc();
  })
  $('.l_skaf .vars div').click(function() {
    $('.l_skaf div').removeClass('active');
    $(this).addClass('active');
    var id = $(this).attr('id');
    otdelka = id;
    $('.l_center .maket_skaf').css('background', 'url("img/' + id + '_m.png") no-repeat');
    l_calc();
  })
  $('.l_floor .swich span').click(function() {
    $('.l_floor .swich span').removeClass('active');
    $(this).addClass('active');
    var id = $(this).attr('id');
    $('.l_floor .vars div').removeClass('hide');
    $('.l_floor .vars div').addClass('hide');
    $('.l_floor .vars div.' + id).removeClass('hide');
    $('.l_floor .vars div.' + id + ' div').removeClass('hide');
  })
  $('.l_floor .vars div').click(function() {
    $('.l_floor div').removeClass('active');
    $(this).addClass('active');
    var id = $(this).attr('id');
    otdelka = id;
    $('.l_center .maket_floor').css('background', 'url("img/' + id + '_m.png") no-repeat');
    l_calc();
  })
  $('#callback-send2').click(function() {
    var name = $('.v_name').val();
    var tel = $('.v_tel').val();

    $.ajax({
      type: "POST",
      url: "forms.php",
      data: "name=" + name + "&tel=" + tel + '&f=callback2&subject=РАССЧИТАЕМ ВАШ ЗАКАЗ ЗА 5 МИНУТ!',
      success: function(data) {
        if (data == 'ok') {
          //  alert ('Заявка успешно отправлена');
          $('.s_name').val('');
          $('.s_tel').val('');
          $('#hide-layout').fadeIn(300);
          $('#spasibo').fadeIn(300);
        } else {
          alert('Ошибка отправки заявки');
        };

      }
    });

  });
  $('#callback-send22').click(function() {
    var name = '-';
    var tel = $('.v_tell').val();

    $.ajax({
      type: "POST",
      url: "forms.php",
      data: "name=" + name + "&tel=" + tel + '&f=callback22&subject=Успей купить до подорожания!',
      success: function(data) {
        if (data == 'ok') {

          $('.v_tell').val('');
          $('#hide-layout').fadeIn(300);
          $('#spasibo').fadeIn(300);
        } else {
          alert('Ошибка отправки заявки');
        };

      }
    });
  });

  $('#callback-send1').click(function() {

    var name = $('.pop_name').val();
    var tel = $('.pop_tel').val();
    var type = $('.pop_type').val();

    $.ajax({
      type: "POST",
      url: "forms.php",
      data: "name=" + name + "&tel=" + tel + "&f=" + type + "&subject=Вызвать замерщика",
      success: function(data) {
        if (data == 'ok') {
          $('#popup1').fadeOut(300);
          $('.pop_name').val('');
          $('.pop_tel').val('');
          $('#spasibo').fadeIn(300);
          // alert ('Заявка успешно отправлена');
        } else {
          alert('Ошибка отправки заявки');
        };

      }
    });

  });
  $('#callback-send3').click(function() {
    var name3 = $('.v_name3').val();
    var tel3 = $('.v_tel3').val();
    $.ajax({
      type: "POST",
      url: "forms.php",
      data: "name=" + name3 + "&tel=" + tel3 + '&f=callback2&subject=РАССЧИТАЕМ ВАШ ЗАКАЗ ЗА 5 МИНУТ!',
      success: function(data) {
        if (data == 'ok') {
          //  alert ('Заявка успешно отправлена');
          $('.s_name').val('');
          $('.s_tel').val('');
          $('#hide-layout').fadeIn(300);
          $('#spasibo').fadeIn(300);
        } else {
          alert('Ошибка отправки заявки');
        };
      }
    });
  });
  $('#callback-send_otz').click(function() {
    var name = $('#callback3otz .v_name').val();
    var tel = $('#callback3otz .v_tel').val();
    var txt = $('#callback3otz .v_text').val();
    $.ajax({
      type: "POST",
      url: "forms.php",
      data: "name=" + name + "&tel=" + tel + '&txt=' + txt + '&f=otz',
      success: function(data) {
        if (data == 'ok') {
          //  alert ('Заявка успешно отправлена');
          $('#callback3otz .v_name').val('');
          $('#callback3otz .v_tel').val('');
          $('#hide-layout').fadeIn(300);
          $('#spasibo').fadeIn(300);
        } else {
          alert('Ошибка отправки заявки');
        };
      }
    });
  });
  $('#callback-pozdr').click(function() {

    $.cookie('was', true, {
      expires: 1,
      path: '/'
    });
    var name = $('.pozdr_name').val();
    var tel = $('.pozdr_tel').val();

    $.ajax({
      type: "POST",
      url: "forms.php",
      data: "name=" + name + "&tel=" + tel + '&f=pozdr&subject="Поздравляем 10% скидка"',
      success: function(data) {
        if (data == 'ok') {

          $('.pozdr_name').val('');
          $('.pozdr_tel').val('');
          $('#pozdr').fadeOut(300);
          $('#spasibo').fadeIn(300);
        } else {
          alert('Заявка успешно отправлена');
        };

      }
    });
  });
  $(".calc_menu li").click(function() {
    $(".calc_menu li").removeClass('active');
    var id = $(this).attr('id');
    $(".calc_sub").removeClass('hide');
    $(".calc_sub").addClass('hide');
    $(".calc_sub." + id).removeClass('hide');
  });
  $(".calc .calc_sub div").click(function() {
    var id = $(this).attr('class');
    //alert (id);
    current_id = $(this).attr('id');
    $(".calc .calc_sub").removeClass('hide');
    $(".calc .calc_sub").addClass('hide');
    $('#' + id).html('<img src="img/' + current_id + '.png">');
    $('.calc_main').css('background', 'url("img/' + current_id + '.jpg") no-repeat scroll center top rgba(0, 0, 0, 0)');
    $('#' + id).addClass('active');
    oknaCalc();
  });
  $(".c_width").keyup(function() {
    if ($(".c_width").val() > 300) {
      $(".c_width").val(300)
    }
    $(".c_width").val(Math.floor($(".c_width").val()));
    $("#slider-horizontal").slider({
      value: $(".c_width").val()
    });
    $(".z_w").html($(".c_width").val() + ' см');
    var a = $('#slider-horizontal span').css('left');
    $(".z_w").css('left', a);
    if ($(".c_width").val() >= 80) {
      oknaCalc();
    } else {
      $(".itogi .itogo").html('0.-')
      $(".itogi .i_montaz span").html('0 руб.');
      $(".itogi .i_otd span").html('0 руб.');
      $(".itogi .i_rassr span").html('0');
    }
  });
  $(".c_height").keyup(function() {
    if ($(".c_height").val() > 220) {
      $(".c_height").val(220)
    }
    $(".c_height").val(Math.floor($(".c_height").val()));
    $("#slider-vertical").slider({
      value: $(".c_height").val()
    });
    $(".z_h").html($(".c_height").val() + ' см');
    var a = $('#slider-vertical span').css('bottom');
    $(".z_h").css('bottom', a);
    if ($(".c_height").val() >= 80) {
      oknaCalc();
    } else {
      $(".itogi .itogo").html('0.-')
      $(".itogi .i_montaz span").html('0 руб.');
      $(".itogi .i_otd span").html('0 руб.');
      $(".itogi .i_rassr span").html('0');
    }
  })


  $.lockfixed("#callback3otz", {
    offset: {
      top: 10,
      bottom: 1100
    }
  });
  $('.pop_name').blur(function() {
    if ($('.pop_name').val() == '') {
      $('.pop_name').val('Ваше имя');
    }
  });
  $('.pop_tel').blur(function() {
    if ($('.pop_tel').val() == '') {
      $('.pop_tel').val('Телефон');
    }
  });

  $('.v_name').blur(function() {
    if ($('.v_name').val() == '') {
      $('.v_name').val('Ваше имя');
    }
  });
  $('.v_tel').blur(function() {
    if ($('.v_tel').val() == '') {
      $('.v_tel').val('Телефон');

    }
  });
});

$(function() {
  if (!$.cookie('was')) {

    $("#pozdr").delay(30000).fadeIn(400);
    $("#hide-layout").delay(30000).fadeIn(400);

    setTimeout(timer, 30000);
  }
})

$('.pozdr .f-close').click(function() {
  $("#pozdr").fadeOut(400);
  $("#hide-layout").fadeOut(400);
  $.cookie('was', true, {
    expires: 1,
    path: '/'
  });

})

$('.popup1 .f-close').click(function() {
  $("#popup1").fadeOut(400);
  $("#hide-layout").fadeOut(400);

})

function grafic() {

  var c1 = 2340;
  var c2 = 2190;
  var c3 = 2500;
  var c4 = 2840;
  var c5 = 3070;
  var c6 = 3220;

  var count = 0;
  var intervalID1 = setInterval(
    function() {
      if (count < c1) {
        count = count + 5;
        $(".col1 .internal .numbers").html(count);
      } else {
        $(".col1 .internal .numbers").html(c1);
        clearInterval(intervalID1);

      }
    }, 1 // интервал в мс.
  );
  $(".col1 .internal").animate({
    bottom: "0px"
  }, 1000, function() {
    var count = 0;
    var intervalID2 = setInterval(
      function() {
        if (count < c2) {
          count = count + 5;
          $(".col2 .internal .numbers_y").html(count);
        } else {
          $(".col2 .internal .numbers_y").html(c2);
          clearInterval(intervalID2);

        }
      }, 1 // интервал в мс.
    );
    $(".col2 .internal").animate({
      bottom: "0px"
    }, 1000, function() {
      $('.s_grafic').fadeIn(300);
      var count = 0;
      var intervalID3 = setInterval(
        function() {
          if (count < c3) {
            count = count + 5;
            $(".col3 .internal .numbers").html(count);
          } else {
            $(".col3 .internal .numbers").html(c3);
            clearInterval(intervalID3);

          }
        }, 1 // интервал в мс.
      );
      $(".col3 .internal").animate({
        bottom: "0px"
      }, 1000, function() {
        var count = 0;
        var intervalID4 = setInterval(
          function() {
            if (count < c4) {
              count = count + 5;
              $(".col4 .internal .numbers").html(count);
            } else {
              $(".col4 .internal .numbers").html(c4);
              clearInterval(intervalID4);

            }
          }, 1 // интервал в мс.
        );
        $(".col4 .internal").animate({
          bottom: "0px"
        }, 1000, function() {
          var count = 0;
          var intervalID5 = setInterval(
            function() {
              if (count < c5) {
                count = count + 5;
                $(".col5 .internal .numbers").html(count);
              } else {
                $(".col5 .internal .numbers").html(c5);
                clearInterval(intervalID5);

              }
            }, 1 // интервал в мс.
          );
          $(".col5 .internal").animate({
            bottom: "0px"
          }, 1000, function() {
            var count = 0;
            var intervalID6 = setInterval(
              function() {
                if (count < c6) {
                  count = count + 5;
                  $(".col6 .internal .numbers").html(count);
                } else {
                  $(".col6 .internal .numbers").html(c6);
                  clearInterval(intervalID6);

                }
              }, 1 // интервал в мс.
            );
            $(".col6 .internal").animate({
              bottom: "0px"
            }, 1000);
          })
        })
      })
    })

  });
}

function pre_move_callback(anchor, instance, framenumber) {
  //  alert('Callback example: Frame '+framenumber+', with the link "'+anchor+'", moved forward (in Boutique with an ID of "'+instance+'").');

  var len = $("#otz_carousel > li").length / 2;

  for (var i = 1; i <= len; i++) {
    $('#otz_carousel .frame' + i + ' img').attr('src', 'img/' + ($('#otz_carousel .frame' + i + ' img').attr('id') + '_b.png'));
    $('#otz_carousel .frame' + i + ' .otz_prof').addClass('hide');
    $('#otz_carousel .frame' + i + ' .otz_name').css('color', '#999');
    $('.otz .otz' + i + '').addClass('hide');
  }
}

function move_callback(anchor, instance, framenumber) {
  $('#otz_carousel .frame3 img').attr('src', 'img/' + ($('#otz_carousel .frame3 img').attr('id') + '.png'));
  $('#otz_carousel .frame3 .otz_prof').removeClass('hide');
  $('.otz .' + $('#otz_carousel .frame3 img').attr('id') + '').removeClass('hide');
  $('#otz_carousel .frame3 .otz_name').css('color', '#000');
}

function timer() {
  if ($('#sec').length > 0) {
    var obj = document.getElementById('sec');
    obj.innerHTML--;

    if (obj.innerHTML == 0) {
      $('.pozdr .f-close').click();
    } else {
      setTimeout(timer, 1000);
    }
  }

}

function l_calc() {
  var itog = (price[roof] + price[okno] + price[shell] + price[struct] + price[otdelka] + price[skaf] + price[floor]) * k;
  $('.l_price .price').html(itog);
  $('.l_price .rassr span').html(Math.floor(itog / 12));
}

function init() {
  myMap = new ymaps.Map("map", {
    center: [51.640954, 39.235932],
    zoom: 16,
    controls: ['zoomControl'],
  });
  myPlacemark = new ymaps.Placemark([51.640954, 39.235932], {
    hintContent: 'Доступные Окна',
    balloonContent: 'Доступные Окна'
  }, {
    iconLayout: 'default#image',
    //iconImageHref: 'путь к картинке',
    // Размеры метки.
    // iconImageSize: [149, 117],
    // Смещение левого верхнего угла иконки относительно
    // её "ножки" (точки привязки).
    // iconImageOffset: [-70, -117]
  });
  myMap.geoObjects.add(myPlacemark);
  myMap.behaviors.disable("scrollZoom");
}

function oknaCalc() {
  var gluh = 2798;
  var povorot = 4845;
  var full = 5128;
  //  current_id
  var c_width = $('.c_width').val();
  var c_height = $('.c_height').val();
  if (current_id == "o1_1") {
    var itog = c_width * c_height / 10000 * gluh;
  }
  if (current_id == "o1_2") {
    var itog = c_width * c_height / 10000 * povorot;
  }
  if (current_id == "o1_3") {
    var itog = c_width * c_height / 10000 * full;
  }
  if (current_id == "o2_1") {
    var itog = (c_width / 2) * c_height / 10000 * gluh + (c_width / 2) * c_height / 10000 * povorot;
  }
  if (current_id == "o2_2") {
    var itog = (c_width / 2) * c_height / 10000 * gluh + (c_width / 2) * c_height / 10000 * full;
  }
  if (current_id == "o2_3") {
    var itog = (c_width / 2) * c_height / 10000 * povorot + (c_width / 2) * c_height / 10000 * povorot;
  }
  if (current_id == "o2_4") {
    var itog = (c_width / 2) * c_height / 10000 * povorot + (c_width / 2) * c_height / 10000 * full;
  }
  if (current_id == "o3_1") {
    var itog = (c_width / 3) * c_height / 10000 * gluh + (c_width / 3) * c_height / 10000 * povorot + (c_width / 3) * c_height / 10000 * gluh;
  }
  if (current_id == "o3_2") {
    var itog = (c_width / 3) * c_height / 10000 * povorot + (c_width / 3) * c_height / 10000 * gluh + (c_width / 3) * c_height / 10000 * povorot;
  }
  if (current_id == "o3_3") {
    var itog = (c_width / 3) * c_height / 10000 * povorot + (c_width / 3) * c_height / 10000 * gluh + (c_width / 3) * c_height / 10000 * full;
  }
  if (current_id == "o4_1") {
    var itog = c_width * c_height / 10000 * gluh;
  }
  if (current_id == "o4_2") {
    var itog = (c_width / 2) * c_height / 10000 * gluh + (c_width / 2) * c_height / 10000 * gluh;
  }
  var itogo = Math.floor(itog);
  $(".itogi .itogo").html(Math.floor(itogo) + '.-');
  $(".itogi .i_montaz span").html(Math.floor(itogo * 0.2) + ' руб.');
  $(".itogi .i_otd span").html(Math.floor(itogo * 0.3) + ' руб.');
  $(".itogi .i_rassr span").html(Math.floor(itogo / 12));
}
$(function() {
  oknaCalc();
})

var roof = 'roof2';
var okno = 'okno2';
var shell = 'shell1';
var struct = 'struct1';
var otdelka = 'otdelka1';
var skaf = 'skaf1';
var floor = 'floor10';
var price = new Object();
//крыша
price['roof1'] = 0;
price['roof2'] = 2500;
price['roof3'] = 2500;
//остекление
price['okno1'] = 2190;
price['okno2'] = 1850;
//обшивка
price['shell1'] = 0;
price['shell2'] = 600;
price['shell3'] = 800;
//кладка
price['struct1'] = 0;
price['struct2'] = 600;
//пвх вагонка
price['otdelka1'] = 600;
price['otdelka2'] = 600;
price['otdelka3'] = 600;
price['otdelka4'] = 600;
price['otdelka5'] = 600;
//пвх вагонка широкая
price['otdelka6'] = 800;
price['otdelka7'] = 800;
price['otdelka8'] = 800;
price['otdelka9'] = 800;
price['otdelka10'] = 800;
// вагонка
price['otdelka11'] = 400;
//Шкаф
price['skaf1'] = 2400;
price['skaf2'] = 2400;
price['skaf3'] = 2400;
price['skaf4'] = 1700;
//пол линолеум
price['floor1'] = 400;
price['floor2'] = 400;
price['floor3'] = 400;
price['floor4'] = 400;
price['floor5'] = 400;
//пол ламинат
price['floor6'] = 650;
price['floor7'] = 650;
price['floor8'] = 650;
price['floor9'] = 650;
//пол доска
price['floor10'] = 250;
var k = 3; //коэффициент

l_calc();

ymaps.ready(init);
var myMap,
  myPlacemark;


function init() {
  myMap = new ymaps.Map("map", {
    center: [51.640954, 39.235932],
    zoom: 16,
    controls: ['zoomControl'],

  });


  myPlacemark = new ymaps.Placemark([51.640954, 39.235932], {
    hintContent: 'Доступные Окна',
    balloonContent: 'Доступные Окна'
  }, {
    iconLayout: 'default#image',
    //iconImageHref: 'путь к картинке',
    // Размеры метки.
    // iconImageSize: [149, 117],
    // Смещение левого верхнего угла иконки относительно
    // её "ножки" (точки привязки).
    // iconImageOffset: [-70, -117]


  });

  myMap.geoObjects.add(myPlacemark);
  myMap.behaviors.disable("scrollZoom");
}
